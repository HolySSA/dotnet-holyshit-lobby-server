// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Src/Network/Packets/Common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HolyShitServer.Src.Network.Packets {

  /// <summary>Holder for reflection information generated from Src/Network/Packets/Common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for Src/Network/Packets/Common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBTcmMvTmV0d29yay9QYWNrZXRzL0NvbW1vbi5wcm90byJLCghVc2VyRGF0",
            "YRIKCgJpZBgBIAEoAxIQCghuaWNrbmFtZRgCIAEoCRIhCgljaGFyYWN0ZXIY",
            "AyABKAsyDi5DaGFyYWN0ZXJEYXRhIoYCCg1DaGFyYWN0ZXJEYXRhEiUKDWNo",
            "YXJhY3RlclR5cGUYASABKA4yDi5DaGFyYWN0ZXJUeXBlEhsKCHJvbGVUeXBl",
            "GAIgASgOMgkuUm9sZVR5cGUSCgoCaHAYAyABKAUSDgoGd2VhcG9uGAQgASgF",
            "EioKCXN0YXRlSW5mbxgFIAEoCzIXLkNoYXJhY3RlclN0YXRlSW5mb0RhdGES",
            "DgoGZXF1aXBzGAYgAygFEg8KB2RlYnVmZnMYByADKAUSHAoJaGFuZENhcmRz",
            "GAggAygLMgkuQ2FyZERhdGESEgoKYmJhbmdDb3VudBgJIAEoBRIWCg5oYW5k",
            "Q2FyZHNDb3VudBgKIAEoBSKUAQoWQ2hhcmFjdGVyU3RhdGVJbmZvRGF0YRIi",
            "CgVzdGF0ZRgBIAEoDjITLkNoYXJhY3RlclN0YXRlVHlwZRImCgluZXh0U3Rh",
            "dGUYAiABKA4yEy5DaGFyYWN0ZXJTdGF0ZVR5cGUSEwoLbmV4dFN0YXRlQXQY",
            "AyABKAMSGQoRc3RhdGVUYXJnZXRVc2VySWQYBCABKAMiMgoIQ2FyZERhdGES",
            "FwoEdHlwZRgBIAEoDjIJLkNhcmRUeXBlEg0KBWNvdW50GAIgASgFIoIBCghS",
            "b29tRGF0YRIKCgJpZBgBIAEoBRIPCgdvd25lcklkGAIgASgDEgwKBG5hbWUY",
            "AyABKAkSEgoKbWF4VXNlck51bRgEIAEoBRIdCgVzdGF0ZRgFIAEoDjIOLlJv",
            "b21TdGF0ZVR5cGUSGAoFdXNlcnMYBiADKAsyCS5Vc2VyRGF0YSI5ChVDaGFy",
            "YWN0ZXJQb3NpdGlvbkRhdGESCgoCaWQYASABKAMSCQoBeBgCIAEoARIJCgF5",
            "GAMgASgBIkMKDUdhbWVTdGF0ZURhdGESHQoJcGhhc2VUeXBlGAEgASgOMgou",
            "UGhhc2VUeXBlEhMKC25leHRQaGFzZUF0GAIgASgDKpMBCg1DaGFyYWN0ZXJU",
            "eXBlEhIKDk5PTkVfQ0hBUkFDVEVSEAASBwoDUkVEEAESCQoFU0hBUksQAxIK",
            "CgZNQUxBTkcQBRIKCgZGUk9HR1kQBxIICgRQSU5LEAgSEAoMU1dJTV9HTEFT",
            "U0VTEAkSCAoETUFTSxAKEgwKCERJTk9TQVVSEAwSDgoKUElOS19TTElNRRAN",
            "KuoCChJDaGFyYWN0ZXJTdGF0ZVR5cGUSGAoUTk9ORV9DSEFSQUNURVJfU1RB",
            "VEUQABIRCg1CQkFOR19TSE9PVEVSEAESEAoMQkJBTkdfVEFSR0VUEAISFQoR",
            "REVBVEhfTUFUQ0hfU1RBVEUQAxIaChZERUFUSF9NQVRDSF9UVVJOX1NUQVRF",
            "EAQSFAoQRkxFQV9NQVJLRVRfVFVSThAFEhQKEEZMRUFfTUFSS0VUX1dBSVQQ",
            "BhIVChFHVUVSUklMTEFfU0hPT1RFUhAHEhQKEEdVRVJSSUxMQV9UQVJHRVQQ",
            "CBIVChFCSUdfQkJBTkdfU0hPT1RFUhAJEhQKEEJJR19CQkFOR19UQVJHRVQQ",
            "ChINCglBQlNPUkJJTkcQCxIRCg1BQlNPUkJfVEFSR0VUEAwSEQoNSEFMTFVD",
            "SU5BVElORxANEhgKFEhBTExVQ0lOQVRJT05fVEFSR0VUEA4SDQoJQ09OVEFJ",
            "TkVEEA8qUAoIUm9sZVR5cGUSDQoJTk9ORV9ST0xFEAASCgoGVEFSR0VUEAES",
            "DQoJQk9EWUdVQVJEEAISCgoGSElUTUFOEAMSDgoKUFNZQ0hPUEFUSBAEKoID",
            "CghDYXJkVHlwZRIICgROT05FEAASCQoFQkJBTkcQARINCglCSUdfQkJBTkcQ",
            "AhIKCgZTSElFTEQQAxILCgdWQUNDSU5FEAQSDAoIQ0FMTF8xMTkQBRIPCgtE",
            "RUFUSF9NQVRDSBAGEg0KCUdVRVJSSUxMQRAHEgoKBkFCU09SQhAIEhEKDUhB",
            "TExVQ0lOQVRJT04QCRIPCgtGTEVBX01BUktFVBAKEhMKD01BVFVSRURfU0FW",
            "SU5HUxALEg8KC1dJTl9MT1RURVJZEAwSDgoKU05JUEVSX0dVThANEgwKCEhB",
            "TkRfR1VOEA4SEAoMREVTRVJUX0VBR0xFEA8SDgoKQVVUT19SSUZMRRAQEhEK",
            "DUxBU0VSX1BPSU5URVIQERIJCgVSQURBUhASEg8KC0FVVE9fU0hJRUxEEBMS",
            "EAoMU1RFQUxUSF9TVUlUEBQSFAoQQ09OVEFJTk1FTlRfVU5JVBAVEhQKEFNB",
            "VEVMTElURV9UQVJHRVQQFhIICgRCT01CEBcqjwMKDkdsb2JhbEZhaWxDb2Rl",
            "EhEKDU5PTkVfRkFJTENPREUQABIRCg1VTktOT1dOX0VSUk9SEAESEwoPSU5W",
            "QUxJRF9SRVFVRVNUEAISGQoVQVVUSEVOVElDQVRJT05fRkFJTEVEEAMSFgoS",
            "Q1JFQVRFX1JPT01fRkFJTEVEEAQSFAoQSk9JTl9ST09NX0ZBSUxFRBAFEhUK",
            "EUxFQVZFX1JPT01fRkFJTEVEEAYSEwoPUkVHSVNURVJfRkFJTEVEEAcSEgoO",
            "Uk9PTV9OT1RfRk9VTkQQCBIXChNDSEFSQUNURVJfTk9UX0ZPVU5EEAkSGQoV",
            "Q0hBUkFDVEVSX1NUQVRFX0VSUk9SEAoSFQoRQ0hBUkFDVEVSX05PX0NBUkQQ",
            "CxIWChJJTlZBTElEX1JPT01fU1RBVEUQDBISCg5OT1RfUk9PTV9PV05FUhAN",
            "EhYKEkFMUkVBRFlfVVNFRF9CQkFORxAOEhEKDUlOVkFMSURfUEhBU0UQDxIX",
            "ChNDSEFSQUNURVJfQ09OVEFJTkVEEBAqMgoNUm9vbVN0YXRlVHlwZRIICgRX",
            "QUlUEAASCwoHUFJFUEFSRRABEgoKBklOR0FNRRACKjoKCVBoYXNlVHlwZRIO",
            "CgpOT05FX1BIQVNFEAASBwoDREFZEAESCwoHRVZFTklORxACEgcKA0VORBAD",
            "QiWqAiJIb2x5U2hpdFNlcnZlci5TcmMuTmV0d29yay5QYWNrZXRzYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HolyShitServer.Src.Network.Packets.CharacterType), typeof(global::HolyShitServer.Src.Network.Packets.CharacterStateType), typeof(global::HolyShitServer.Src.Network.Packets.RoleType), typeof(global::HolyShitServer.Src.Network.Packets.CardType), typeof(global::HolyShitServer.Src.Network.Packets.GlobalFailCode), typeof(global::HolyShitServer.Src.Network.Packets.RoomStateType), typeof(global::HolyShitServer.Src.Network.Packets.PhaseType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.UserData), global::HolyShitServer.Src.Network.Packets.UserData.Parser, new[]{ "Id", "Nickname", "Character" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.CharacterData), global::HolyShitServer.Src.Network.Packets.CharacterData.Parser, new[]{ "CharacterType", "RoleType", "Hp", "Weapon", "StateInfo", "Equips", "Debuffs", "HandCards", "BbangCount", "HandCardsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.CharacterStateInfoData), global::HolyShitServer.Src.Network.Packets.CharacterStateInfoData.Parser, new[]{ "State", "NextState", "NextStateAt", "StateTargetUserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.CardData), global::HolyShitServer.Src.Network.Packets.CardData.Parser, new[]{ "Type", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.RoomData), global::HolyShitServer.Src.Network.Packets.RoomData.Parser, new[]{ "Id", "OwnerId", "Name", "MaxUserNum", "State", "Users" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.CharacterPositionData), global::HolyShitServer.Src.Network.Packets.CharacterPositionData.Parser, new[]{ "Id", "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.GameStateData), global::HolyShitServer.Src.Network.Packets.GameStateData.Parser, new[]{ "PhaseType", "NextPhaseAt" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CharacterType {
    [pbr::OriginalName("NONE_CHARACTER")] NoneCharacter = 0,
    /// <summary>
    /// 빨강이
    /// </summary>
    [pbr::OriginalName("RED")] Red = 1,
    /// <summary>
    /// 상어군
    /// </summary>
    [pbr::OriginalName("SHARK")] Shark = 3,
    /// <summary>
    /// 말랑이
    /// </summary>
    [pbr::OriginalName("MALANG")] Malang = 5,
    /// <summary>
    /// 개굴군
    /// </summary>
    [pbr::OriginalName("FROGGY")] Froggy = 7,
    /// <summary>
    /// 핑크군
    /// </summary>
    [pbr::OriginalName("PINK")] Pink = 8,
    /// <summary>
    /// 물안경군
    /// </summary>
    [pbr::OriginalName("SWIM_GLASSES")] SwimGlasses = 9,
    /// <summary>
    /// 가면군
    /// </summary>
    [pbr::OriginalName("MASK")] Mask = 10,
    /// <summary>
    /// 공룡이
    /// </summary>
    [pbr::OriginalName("DINOSAUR")] Dinosaur = 12,
    /// <summary>
    /// 핑크슬라임
    /// </summary>
    [pbr::OriginalName("PINK_SLIME")] PinkSlime = 13,
  }

  public enum CharacterStateType {
    [pbr::OriginalName("NONE_CHARACTER_STATE")] NoneCharacterState = 0,
    /// <summary>
    /// 빵야 시전자
    /// </summary>
    [pbr::OriginalName("BBANG_SHOOTER")] BbangShooter = 1,
    /// <summary>
    /// 빵야 대상 (쉴드 사용가능 상태)
    /// </summary>
    [pbr::OriginalName("BBANG_TARGET")] BbangTarget = 2,
    /// <summary>
    /// 현피 중 자신의 턴이 아닐 때
    /// </summary>
    [pbr::OriginalName("DEATH_MATCH_STATE")] DeathMatchState = 3,
    /// <summary>
    /// 현피 중 자신의 턴
    /// </summary>
    [pbr::OriginalName("DEATH_MATCH_TURN_STATE")] DeathMatchTurnState = 4,
    /// <summary>
    /// 플리마켓 자신의 턴
    /// </summary>
    [pbr::OriginalName("FLEA_MARKET_TURN")] FleaMarketTurn = 5,
    /// <summary>
    /// 플리마켓 턴 대기 상태
    /// </summary>
    [pbr::OriginalName("FLEA_MARKET_WAIT")] FleaMarketWait = 6,
    /// <summary>
    /// 게릴라 시전자
    /// </summary>
    [pbr::OriginalName("GUERRILLA_SHOOTER")] GuerrillaShooter = 7,
    /// <summary>
    /// 게릴라 대상
    /// </summary>
    [pbr::OriginalName("GUERRILLA_TARGET")] GuerrillaTarget = 8,
    /// <summary>
    /// 난사 시전자
    /// </summary>
    [pbr::OriginalName("BIG_BBANG_SHOOTER")] BigBbangShooter = 9,
    /// <summary>
    /// 난사 대상
    /// </summary>
    [pbr::OriginalName("BIG_BBANG_TARGET")] BigBbangTarget = 10,
    /// <summary>
    /// 흡수 중
    /// </summary>
    [pbr::OriginalName("ABSORBING")] Absorbing = 11,
    /// <summary>
    /// 흡수 대상
    /// </summary>
    [pbr::OriginalName("ABSORB_TARGET")] AbsorbTarget = 12,
    /// <summary>
    /// 신기루 중
    /// </summary>
    [pbr::OriginalName("HALLUCINATING")] Hallucinating = 13,
    /// <summary>
    /// 신기루 대상
    /// </summary>
    [pbr::OriginalName("HALLUCINATION_TARGET")] HallucinationTarget = 14,
    /// <summary>
    /// 감금 중
    /// </summary>
    [pbr::OriginalName("CONTAINED")] Contained = 15,
  }

  public enum RoleType {
    [pbr::OriginalName("NONE_ROLE")] NoneRole = 0,
    [pbr::OriginalName("TARGET")] Target = 1,
    [pbr::OriginalName("BODYGUARD")] Bodyguard = 2,
    [pbr::OriginalName("HITMAN")] Hitman = 3,
    [pbr::OriginalName("PSYCHOPATH")] Psychopath = 4,
  }

  public enum CardType {
    [pbr::OriginalName("NONE")] None = 0,
    /// <summary>
    /// 20장
    /// </summary>
    [pbr::OriginalName("BBANG")] Bbang = 1,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("BIG_BBANG")] BigBbang = 2,
    /// <summary>
    /// 10장
    /// </summary>
    [pbr::OriginalName("SHIELD")] Shield = 3,
    /// <summary>
    /// 6장
    /// </summary>
    [pbr::OriginalName("VACCINE")] Vaccine = 4,
    /// <summary>
    /// 2장
    /// </summary>
    [pbr::OriginalName("CALL_119")] Call119 = 5,
    /// <summary>
    /// 4장
    /// </summary>
    [pbr::OriginalName("DEATH_MATCH")] DeathMatch = 6,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("GUERRILLA")] Guerrilla = 7,
    /// <summary>
    /// 4장
    /// </summary>
    [pbr::OriginalName("ABSORB")] Absorb = 8,
    /// <summary>
    /// 4장
    /// </summary>
    [pbr::OriginalName("HALLUCINATION")] Hallucination = 9,
    /// <summary>
    /// 3장
    /// </summary>
    [pbr::OriginalName("FLEA_MARKET")] FleaMarket = 10,
    /// <summary>
    /// 2장
    /// </summary>
    [pbr::OriginalName("MATURED_SAVINGS")] MaturedSavings = 11,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("WIN_LOTTERY")] WinLottery = 12,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("SNIPER_GUN")] SniperGun = 13,
    /// <summary>
    /// 2장
    /// </summary>
    [pbr::OriginalName("HAND_GUN")] HandGun = 14,
    /// <summary>
    /// 3장
    /// </summary>
    [pbr::OriginalName("DESERT_EAGLE")] DesertEagle = 15,
    /// <summary>
    /// 2장
    /// </summary>
    [pbr::OriginalName("AUTO_RIFLE")] AutoRifle = 16,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("LASER_POINTER")] LaserPointer = 17,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("RADAR")] Radar = 18,
    /// <summary>
    /// 2장
    /// </summary>
    [pbr::OriginalName("AUTO_SHIELD")] AutoShield = 19,
    /// <summary>
    /// 2장
    /// </summary>
    [pbr::OriginalName("STEALTH_SUIT")] StealthSuit = 20,
    /// <summary>
    /// 3장
    /// </summary>
    [pbr::OriginalName("CONTAINMENT_UNIT")] ContainmentUnit = 21,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("SATELLITE_TARGET")] SatelliteTarget = 22,
    /// <summary>
    /// 1장
    /// </summary>
    [pbr::OriginalName("BOMB")] Bomb = 23,
  }

  public enum GlobalFailCode {
    [pbr::OriginalName("NONE_FAILCODE")] NoneFailcode = 0,
    [pbr::OriginalName("UNKNOWN_ERROR")] UnknownError = 1,
    [pbr::OriginalName("INVALID_REQUEST")] InvalidRequest = 2,
    [pbr::OriginalName("AUTHENTICATION_FAILED")] AuthenticationFailed = 3,
    [pbr::OriginalName("CREATE_ROOM_FAILED")] CreateRoomFailed = 4,
    [pbr::OriginalName("JOIN_ROOM_FAILED")] JoinRoomFailed = 5,
    [pbr::OriginalName("LEAVE_ROOM_FAILED")] LeaveRoomFailed = 6,
    [pbr::OriginalName("REGISTER_FAILED")] RegisterFailed = 7,
    [pbr::OriginalName("ROOM_NOT_FOUND")] RoomNotFound = 8,
    [pbr::OriginalName("CHARACTER_NOT_FOUND")] CharacterNotFound = 9,
    [pbr::OriginalName("CHARACTER_STATE_ERROR")] CharacterStateError = 10,
    [pbr::OriginalName("CHARACTER_NO_CARD")] CharacterNoCard = 11,
    [pbr::OriginalName("INVALID_ROOM_STATE")] InvalidRoomState = 12,
    [pbr::OriginalName("NOT_ROOM_OWNER")] NotRoomOwner = 13,
    [pbr::OriginalName("ALREADY_USED_BBANG")] AlreadyUsedBbang = 14,
    [pbr::OriginalName("INVALID_PHASE")] InvalidPhase = 15,
    [pbr::OriginalName("CHARACTER_CONTAINED")] CharacterContained = 16,
  }

  public enum RoomStateType {
    [pbr::OriginalName("WAIT")] Wait = 0,
    [pbr::OriginalName("PREPARE")] Prepare = 1,
    [pbr::OriginalName("INGAME")] Ingame = 2,
  }

  public enum PhaseType {
    [pbr::OriginalName("NONE_PHASE")] NonePhase = 0,
    [pbr::OriginalName("DAY")] Day = 1,
    [pbr::OriginalName("EVENING")] Evening = 2,
    [pbr::OriginalName("END")] End = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UserData : pb::IMessage<UserData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserData> _parser = new pb::MessageParser<UserData>(() => new UserData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserData(UserData other) : this() {
      id_ = other.id_;
      nickname_ = other.nickname_;
      character_ = other.character_ != null ? other.character_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserData Clone() {
      return new UserData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 2;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 3;
    private global::HolyShitServer.Src.Network.Packets.CharacterData character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.CharacterData Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Nickname != other.Nickname) return false;
      if (!object.Equals(Character, other.Character)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (character_ != null) hash ^= Character.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (character_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nickname);
      }
      if (character_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.character_ != null) {
        if (character_ == null) {
          Character = new global::HolyShitServer.Src.Network.Packets.CharacterData();
        }
        Character.MergeFrom(other.Character);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            if (character_ == null) {
              Character = new global::HolyShitServer.Src.Network.Packets.CharacterData();
            }
            input.ReadMessage(Character);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Nickname = input.ReadString();
            break;
          }
          case 26: {
            if (character_ == null) {
              Character = new global::HolyShitServer.Src.Network.Packets.CharacterData();
            }
            input.ReadMessage(Character);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterData : pb::IMessage<CharacterData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterData> _parser = new pb::MessageParser<CharacterData>(() => new CharacterData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterData(CharacterData other) : this() {
      characterType_ = other.characterType_;
      roleType_ = other.roleType_;
      hp_ = other.hp_;
      weapon_ = other.weapon_;
      stateInfo_ = other.stateInfo_ != null ? other.stateInfo_.Clone() : null;
      equips_ = other.equips_.Clone();
      debuffs_ = other.debuffs_.Clone();
      handCards_ = other.handCards_.Clone();
      bbangCount_ = other.bbangCount_;
      handCardsCount_ = other.handCardsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterData Clone() {
      return new CharacterData(this);
    }

    /// <summary>Field number for the "characterType" field.</summary>
    public const int CharacterTypeFieldNumber = 1;
    private global::HolyShitServer.Src.Network.Packets.CharacterType characterType_ = global::HolyShitServer.Src.Network.Packets.CharacterType.NoneCharacter;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.CharacterType CharacterType {
      get { return characterType_; }
      set {
        characterType_ = value;
      }
    }

    /// <summary>Field number for the "roleType" field.</summary>
    public const int RoleTypeFieldNumber = 2;
    private global::HolyShitServer.Src.Network.Packets.RoleType roleType_ = global::HolyShitServer.Src.Network.Packets.RoleType.NoneRole;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.RoleType RoleType {
      get { return roleType_; }
      set {
        roleType_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 4;
    private int weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    /// <summary>Field number for the "stateInfo" field.</summary>
    public const int StateInfoFieldNumber = 5;
    private global::HolyShitServer.Src.Network.Packets.CharacterStateInfoData stateInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.CharacterStateInfoData StateInfo {
      get { return stateInfo_; }
      set {
        stateInfo_ = value;
      }
    }

    /// <summary>Field number for the "equips" field.</summary>
    public const int EquipsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_equips_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> equips_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Equips {
      get { return equips_; }
    }

    /// <summary>Field number for the "debuffs" field.</summary>
    public const int DebuffsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_debuffs_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> debuffs_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Debuffs {
      get { return debuffs_; }
    }

    /// <summary>Field number for the "handCards" field.</summary>
    public const int HandCardsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::HolyShitServer.Src.Network.Packets.CardData> _repeated_handCards_codec
        = pb::FieldCodec.ForMessage(66, global::HolyShitServer.Src.Network.Packets.CardData.Parser);
    private readonly pbc::RepeatedField<global::HolyShitServer.Src.Network.Packets.CardData> handCards_ = new pbc::RepeatedField<global::HolyShitServer.Src.Network.Packets.CardData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HolyShitServer.Src.Network.Packets.CardData> HandCards {
      get { return handCards_; }
    }

    /// <summary>Field number for the "bbangCount" field.</summary>
    public const int BbangCountFieldNumber = 9;
    private int bbangCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BbangCount {
      get { return bbangCount_; }
      set {
        bbangCount_ = value;
      }
    }

    /// <summary>Field number for the "handCardsCount" field.</summary>
    public const int HandCardsCountFieldNumber = 10;
    private int handCardsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HandCardsCount {
      get { return handCardsCount_; }
      set {
        handCardsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharacterType != other.CharacterType) return false;
      if (RoleType != other.RoleType) return false;
      if (Hp != other.Hp) return false;
      if (Weapon != other.Weapon) return false;
      if (!object.Equals(StateInfo, other.StateInfo)) return false;
      if(!equips_.Equals(other.equips_)) return false;
      if(!debuffs_.Equals(other.debuffs_)) return false;
      if(!handCards_.Equals(other.handCards_)) return false;
      if (BbangCount != other.BbangCount) return false;
      if (HandCardsCount != other.HandCardsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CharacterType != global::HolyShitServer.Src.Network.Packets.CharacterType.NoneCharacter) hash ^= CharacterType.GetHashCode();
      if (RoleType != global::HolyShitServer.Src.Network.Packets.RoleType.NoneRole) hash ^= RoleType.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Weapon != 0) hash ^= Weapon.GetHashCode();
      if (stateInfo_ != null) hash ^= StateInfo.GetHashCode();
      hash ^= equips_.GetHashCode();
      hash ^= debuffs_.GetHashCode();
      hash ^= handCards_.GetHashCode();
      if (BbangCount != 0) hash ^= BbangCount.GetHashCode();
      if (HandCardsCount != 0) hash ^= HandCardsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CharacterType != global::HolyShitServer.Src.Network.Packets.CharacterType.NoneCharacter) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CharacterType);
      }
      if (RoleType != global::HolyShitServer.Src.Network.Packets.RoleType.NoneRole) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoleType);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (Weapon != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Weapon);
      }
      if (stateInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StateInfo);
      }
      equips_.WriteTo(output, _repeated_equips_codec);
      debuffs_.WriteTo(output, _repeated_debuffs_codec);
      handCards_.WriteTo(output, _repeated_handCards_codec);
      if (BbangCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(BbangCount);
      }
      if (HandCardsCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HandCardsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CharacterType != global::HolyShitServer.Src.Network.Packets.CharacterType.NoneCharacter) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CharacterType);
      }
      if (RoleType != global::HolyShitServer.Src.Network.Packets.RoleType.NoneRole) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoleType);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (Weapon != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Weapon);
      }
      if (stateInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StateInfo);
      }
      equips_.WriteTo(ref output, _repeated_equips_codec);
      debuffs_.WriteTo(ref output, _repeated_debuffs_codec);
      handCards_.WriteTo(ref output, _repeated_handCards_codec);
      if (BbangCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(BbangCount);
      }
      if (HandCardsCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HandCardsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CharacterType != global::HolyShitServer.Src.Network.Packets.CharacterType.NoneCharacter) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CharacterType);
      }
      if (RoleType != global::HolyShitServer.Src.Network.Packets.RoleType.NoneRole) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoleType);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Weapon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weapon);
      }
      if (stateInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateInfo);
      }
      size += equips_.CalculateSize(_repeated_equips_codec);
      size += debuffs_.CalculateSize(_repeated_debuffs_codec);
      size += handCards_.CalculateSize(_repeated_handCards_codec);
      if (BbangCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BbangCount);
      }
      if (HandCardsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HandCardsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterData other) {
      if (other == null) {
        return;
      }
      if (other.CharacterType != global::HolyShitServer.Src.Network.Packets.CharacterType.NoneCharacter) {
        CharacterType = other.CharacterType;
      }
      if (other.RoleType != global::HolyShitServer.Src.Network.Packets.RoleType.NoneRole) {
        RoleType = other.RoleType;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Weapon != 0) {
        Weapon = other.Weapon;
      }
      if (other.stateInfo_ != null) {
        if (stateInfo_ == null) {
          StateInfo = new global::HolyShitServer.Src.Network.Packets.CharacterStateInfoData();
        }
        StateInfo.MergeFrom(other.StateInfo);
      }
      equips_.Add(other.equips_);
      debuffs_.Add(other.debuffs_);
      handCards_.Add(other.handCards_);
      if (other.BbangCount != 0) {
        BbangCount = other.BbangCount;
      }
      if (other.HandCardsCount != 0) {
        HandCardsCount = other.HandCardsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CharacterType = (global::HolyShitServer.Src.Network.Packets.CharacterType) input.ReadEnum();
            break;
          }
          case 16: {
            RoleType = (global::HolyShitServer.Src.Network.Packets.RoleType) input.ReadEnum();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            Weapon = input.ReadInt32();
            break;
          }
          case 42: {
            if (stateInfo_ == null) {
              StateInfo = new global::HolyShitServer.Src.Network.Packets.CharacterStateInfoData();
            }
            input.ReadMessage(StateInfo);
            break;
          }
          case 50:
          case 48: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
          case 58:
          case 56: {
            debuffs_.AddEntriesFrom(input, _repeated_debuffs_codec);
            break;
          }
          case 66: {
            handCards_.AddEntriesFrom(input, _repeated_handCards_codec);
            break;
          }
          case 72: {
            BbangCount = input.ReadInt32();
            break;
          }
          case 80: {
            HandCardsCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CharacterType = (global::HolyShitServer.Src.Network.Packets.CharacterType) input.ReadEnum();
            break;
          }
          case 16: {
            RoleType = (global::HolyShitServer.Src.Network.Packets.RoleType) input.ReadEnum();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            Weapon = input.ReadInt32();
            break;
          }
          case 42: {
            if (stateInfo_ == null) {
              StateInfo = new global::HolyShitServer.Src.Network.Packets.CharacterStateInfoData();
            }
            input.ReadMessage(StateInfo);
            break;
          }
          case 50:
          case 48: {
            equips_.AddEntriesFrom(ref input, _repeated_equips_codec);
            break;
          }
          case 58:
          case 56: {
            debuffs_.AddEntriesFrom(ref input, _repeated_debuffs_codec);
            break;
          }
          case 66: {
            handCards_.AddEntriesFrom(ref input, _repeated_handCards_codec);
            break;
          }
          case 72: {
            BbangCount = input.ReadInt32();
            break;
          }
          case 80: {
            HandCardsCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterStateInfoData : pb::IMessage<CharacterStateInfoData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterStateInfoData> _parser = new pb::MessageParser<CharacterStateInfoData>(() => new CharacterStateInfoData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterStateInfoData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterStateInfoData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterStateInfoData(CharacterStateInfoData other) : this() {
      state_ = other.state_;
      nextState_ = other.nextState_;
      nextStateAt_ = other.nextStateAt_;
      stateTargetUserId_ = other.stateTargetUserId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterStateInfoData Clone() {
      return new CharacterStateInfoData(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::HolyShitServer.Src.Network.Packets.CharacterStateType state_ = global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.CharacterStateType State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "nextState" field.</summary>
    public const int NextStateFieldNumber = 2;
    private global::HolyShitServer.Src.Network.Packets.CharacterStateType nextState_ = global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.CharacterStateType NextState {
      get { return nextState_; }
      set {
        nextState_ = value;
      }
    }

    /// <summary>Field number for the "nextStateAt" field.</summary>
    public const int NextStateAtFieldNumber = 3;
    private long nextStateAt_;
    /// <summary>
    /// state가 nextState로 풀리는 밀리초 타임스탬프. state가 NONE이면 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextStateAt {
      get { return nextStateAt_; }
      set {
        nextStateAt_ = value;
      }
    }

    /// <summary>Field number for the "stateTargetUserId" field.</summary>
    public const int StateTargetUserIdFieldNumber = 4;
    private long stateTargetUserId_;
    /// <summary>
    /// state에 target이 있을 경우
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StateTargetUserId {
      get { return stateTargetUserId_; }
      set {
        stateTargetUserId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterStateInfoData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterStateInfoData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (NextState != other.NextState) return false;
      if (NextStateAt != other.NextStateAt) return false;
      if (StateTargetUserId != other.StateTargetUserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) hash ^= State.GetHashCode();
      if (NextState != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) hash ^= NextState.GetHashCode();
      if (NextStateAt != 0L) hash ^= NextStateAt.GetHashCode();
      if (StateTargetUserId != 0L) hash ^= StateTargetUserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (NextState != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NextState);
      }
      if (NextStateAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NextStateAt);
      }
      if (StateTargetUserId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StateTargetUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (NextState != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NextState);
      }
      if (NextStateAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NextStateAt);
      }
      if (StateTargetUserId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(StateTargetUserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (State != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (NextState != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NextState);
      }
      if (NextStateAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextStateAt);
      }
      if (StateTargetUserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StateTargetUserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterStateInfoData other) {
      if (other == null) {
        return;
      }
      if (other.State != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        State = other.State;
      }
      if (other.NextState != global::HolyShitServer.Src.Network.Packets.CharacterStateType.NoneCharacterState) {
        NextState = other.NextState;
      }
      if (other.NextStateAt != 0L) {
        NextStateAt = other.NextStateAt;
      }
      if (other.StateTargetUserId != 0L) {
        StateTargetUserId = other.StateTargetUserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::HolyShitServer.Src.Network.Packets.CharacterStateType) input.ReadEnum();
            break;
          }
          case 16: {
            NextState = (global::HolyShitServer.Src.Network.Packets.CharacterStateType) input.ReadEnum();
            break;
          }
          case 24: {
            NextStateAt = input.ReadInt64();
            break;
          }
          case 32: {
            StateTargetUserId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::HolyShitServer.Src.Network.Packets.CharacterStateType) input.ReadEnum();
            break;
          }
          case 16: {
            NextState = (global::HolyShitServer.Src.Network.Packets.CharacterStateType) input.ReadEnum();
            break;
          }
          case 24: {
            NextStateAt = input.ReadInt64();
            break;
          }
          case 32: {
            StateTargetUserId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CardData : pb::IMessage<CardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardData> _parser = new pb::MessageParser<CardData>(() => new CardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CardData(CardData other) : this() {
      type_ = other.type_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CardData Clone() {
      return new CardData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::HolyShitServer.Src.Network.Packets.CardType type_ = global::HolyShitServer.Src.Network.Packets.CardType.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.CardType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::HolyShitServer.Src.Network.Packets.CardType.None) hash ^= Type.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::HolyShitServer.Src.Network.Packets.CardType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::HolyShitServer.Src.Network.Packets.CardType.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::HolyShitServer.Src.Network.Packets.CardType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CardData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::HolyShitServer.Src.Network.Packets.CardType.None) {
        Type = other.Type;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::HolyShitServer.Src.Network.Packets.CardType) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::HolyShitServer.Src.Network.Packets.CardType) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RoomData : pb::IMessage<RoomData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomData> _parser = new pb::MessageParser<RoomData>(() => new RoomData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoomData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomData(RoomData other) : this() {
      id_ = other.id_;
      ownerId_ = other.ownerId_;
      name_ = other.name_;
      maxUserNum_ = other.maxUserNum_;
      state_ = other.state_;
      users_ = other.users_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoomData Clone() {
      return new RoomData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ownerId" field.</summary>
    public const int OwnerIdFieldNumber = 2;
    private long ownerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OwnerId {
      get { return ownerId_; }
      set {
        ownerId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxUserNum" field.</summary>
    public const int MaxUserNumFieldNumber = 4;
    private int maxUserNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxUserNum {
      get { return maxUserNum_; }
      set {
        maxUserNum_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::HolyShitServer.Src.Network.Packets.RoomStateType state_ = global::HolyShitServer.Src.Network.Packets.RoomStateType.Wait;
    /// <summary>
    /// WAIT 0, PREPARE 1, INGAME 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.RoomStateType State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 6;
    private static readonly pb::FieldCodec<global::HolyShitServer.Src.Network.Packets.UserData> _repeated_users_codec
        = pb::FieldCodec.ForMessage(50, global::HolyShitServer.Src.Network.Packets.UserData.Parser);
    private readonly pbc::RepeatedField<global::HolyShitServer.Src.Network.Packets.UserData> users_ = new pbc::RepeatedField<global::HolyShitServer.Src.Network.Packets.UserData>();
    /// <summary>
    /// 인덱스 기반으로 턴 진행
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::HolyShitServer.Src.Network.Packets.UserData> Users {
      get { return users_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoomData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoomData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OwnerId != other.OwnerId) return false;
      if (Name != other.Name) return false;
      if (MaxUserNum != other.MaxUserNum) return false;
      if (State != other.State) return false;
      if(!users_.Equals(other.users_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OwnerId != 0L) hash ^= OwnerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MaxUserNum != 0) hash ^= MaxUserNum.GetHashCode();
      if (State != global::HolyShitServer.Src.Network.Packets.RoomStateType.Wait) hash ^= State.GetHashCode();
      hash ^= users_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OwnerId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OwnerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (MaxUserNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxUserNum);
      }
      if (State != global::HolyShitServer.Src.Network.Packets.RoomStateType.Wait) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      users_.WriteTo(output, _repeated_users_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OwnerId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OwnerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (MaxUserNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxUserNum);
      }
      if (State != global::HolyShitServer.Src.Network.Packets.RoomStateType.Wait) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      users_.WriteTo(ref output, _repeated_users_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (OwnerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OwnerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MaxUserNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxUserNum);
      }
      if (State != global::HolyShitServer.Src.Network.Packets.RoomStateType.Wait) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += users_.CalculateSize(_repeated_users_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoomData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OwnerId != 0L) {
        OwnerId = other.OwnerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MaxUserNum != 0) {
        MaxUserNum = other.MaxUserNum;
      }
      if (other.State != global::HolyShitServer.Src.Network.Packets.RoomStateType.Wait) {
        State = other.State;
      }
      users_.Add(other.users_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OwnerId = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            MaxUserNum = input.ReadInt32();
            break;
          }
          case 40: {
            State = (global::HolyShitServer.Src.Network.Packets.RoomStateType) input.ReadEnum();
            break;
          }
          case 50: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OwnerId = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            MaxUserNum = input.ReadInt32();
            break;
          }
          case 40: {
            State = (global::HolyShitServer.Src.Network.Packets.RoomStateType) input.ReadEnum();
            break;
          }
          case 50: {
            users_.AddEntriesFrom(ref input, _repeated_users_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CharacterPositionData : pb::IMessage<CharacterPositionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharacterPositionData> _parser = new pb::MessageParser<CharacterPositionData>(() => new CharacterPositionData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CharacterPositionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterPositionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterPositionData(CharacterPositionData other) : this() {
      id_ = other.id_;
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CharacterPositionData Clone() {
      return new CharacterPositionData(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private double x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private double y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CharacterPositionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CharacterPositionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (X != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(X);
      if (Y != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (X != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (X != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(X);
      }
      if (Y != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (X != 0D) {
        size += 1 + 8;
      }
      if (Y != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CharacterPositionData other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.X != 0D) {
        X = other.X;
      }
      if (other.Y != 0D) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 17: {
            X = input.ReadDouble();
            break;
          }
          case 25: {
            Y = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameStateData : pb::IMessage<GameStateData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameStateData> _parser = new pb::MessageParser<GameStateData>(() => new GameStateData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameStateData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameStateData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameStateData(GameStateData other) : this() {
      phaseType_ = other.phaseType_;
      nextPhaseAt_ = other.nextPhaseAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameStateData Clone() {
      return new GameStateData(this);
    }

    /// <summary>Field number for the "phaseType" field.</summary>
    public const int PhaseTypeFieldNumber = 1;
    private global::HolyShitServer.Src.Network.Packets.PhaseType phaseType_ = global::HolyShitServer.Src.Network.Packets.PhaseType.NonePhase;
    /// <summary>
    /// DAY 1, EVENING 2, END 3 (하루 종료시 카드 버리는 턴)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.PhaseType PhaseType {
      get { return phaseType_; }
      set {
        phaseType_ = value;
      }
    }

    /// <summary>Field number for the "nextPhaseAt" field.</summary>
    public const int NextPhaseAtFieldNumber = 2;
    private long nextPhaseAt_;
    /// <summary>
    /// 다음 페이즈 시작 시점(밀리초 타임스탬프)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextPhaseAt {
      get { return nextPhaseAt_; }
      set {
        nextPhaseAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameStateData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameStateData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PhaseType != other.PhaseType) return false;
      if (NextPhaseAt != other.NextPhaseAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PhaseType != global::HolyShitServer.Src.Network.Packets.PhaseType.NonePhase) hash ^= PhaseType.GetHashCode();
      if (NextPhaseAt != 0L) hash ^= NextPhaseAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PhaseType != global::HolyShitServer.Src.Network.Packets.PhaseType.NonePhase) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PhaseType);
      }
      if (NextPhaseAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NextPhaseAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PhaseType != global::HolyShitServer.Src.Network.Packets.PhaseType.NonePhase) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PhaseType);
      }
      if (NextPhaseAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NextPhaseAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PhaseType != global::HolyShitServer.Src.Network.Packets.PhaseType.NonePhase) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PhaseType);
      }
      if (NextPhaseAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextPhaseAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameStateData other) {
      if (other == null) {
        return;
      }
      if (other.PhaseType != global::HolyShitServer.Src.Network.Packets.PhaseType.NonePhase) {
        PhaseType = other.PhaseType;
      }
      if (other.NextPhaseAt != 0L) {
        NextPhaseAt = other.NextPhaseAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PhaseType = (global::HolyShitServer.Src.Network.Packets.PhaseType) input.ReadEnum();
            break;
          }
          case 16: {
            NextPhaseAt = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PhaseType = (global::HolyShitServer.Src.Network.Packets.PhaseType) input.ReadEnum();
            break;
          }
          case 16: {
            NextPhaseAt = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
