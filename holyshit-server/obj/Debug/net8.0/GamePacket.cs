// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GamePacket.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HolyShitServer.Src.Network.Packets {

  /// <summary>Holder for reflection information generated from GamePacket.proto</summary>
  public static partial class GamePacketReflection {

    #region Descriptor
    /// <summary>File descriptor for GamePacket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GamePacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHYW1lUGFja2V0LnByb3RvGgxDb21tb24ucHJvdG8aCkF1dGgucHJvdG8a",
            "C0xvYmJ5LnByb3RvGgpHYW1lLnByb3RvIrUNCgpHYW1lUGFja2V0EikKDWxv",
            "Z2luX3JlcXVlc3QYASABKAsyEC5DMlNMb2dpblJlcXVlc3RIABIrCg5sb2dp",
            "bl9yZXNwb25zZRgCIAEoCzIRLlMyQ0xvZ2luUmVzcG9uc2VIABI+ChhzZWxl",
            "Y3RfY2hhcmFjdGVyX3JlcXVlc3QYAyABKAsyGi5DMlNTZWxlY3RDaGFyYWN0",
            "ZXJSZXF1ZXN0SAASQAoZc2VsZWN0X2NoYXJhY3Rlcl9yZXNwb25zZRgEIAEo",
            "CzIbLlMyQ1NlbGVjdENoYXJhY3RlclJlc3BvbnNlSAASNAoTY3JlYXRlX3Jv",
            "b21fcmVxdWVzdBgFIAEoCzIVLkMyU0NyZWF0ZVJvb21SZXF1ZXN0SAASNgoU",
            "Y3JlYXRlX3Jvb21fcmVzcG9uc2UYBiABKAsyFi5TMkNDcmVhdGVSb29tUmVz",
            "cG9uc2VIABI3ChVnZXRfcm9vbV9saXN0X3JlcXVlc3QYByABKAsyFi5DMlNH",
            "ZXRSb29tTGlzdFJlcXVlc3RIABI5ChZnZXRfcm9vbV9saXN0X3Jlc3BvbnNl",
            "GAggASgLMhcuUzJDR2V0Um9vbUxpc3RSZXNwb25zZUgAEjAKEWpvaW5fcm9v",
            "bV9yZXF1ZXN0GAkgASgLMhMuQzJTSm9pblJvb21SZXF1ZXN0SAASMgoSam9p",
            "bl9yb29tX3Jlc3BvbnNlGAogASgLMhQuUzJDSm9pblJvb21SZXNwb25zZUgA",
            "Ej0KGGpvaW5fcmFuZG9tX3Jvb21fcmVxdWVzdBgLIAEoCzIZLkMyU0pvaW5S",
            "YW5kb21Sb29tUmVxdWVzdEgAEj8KGWpvaW5fcmFuZG9tX3Jvb21fcmVzcG9u",
            "c2UYDCABKAsyGi5TMkNKb2luUmFuZG9tUm9vbVJlc3BvbnNlSAASOgoWam9p",
            "bl9yb29tX25vdGlmaWNhdGlvbhgNIAEoCzIYLlMyQ0pvaW5Sb29tTm90aWZp",
            "Y2F0aW9uSAASMgoSbGVhdmVfcm9vbV9yZXF1ZXN0GA4gASgLMhQuQzJTTGVh",
            "dmVSb29tUmVxdWVzdEgAEjQKE2xlYXZlX3Jvb21fcmVzcG9uc2UYDyABKAsy",
            "FS5TMkNMZWF2ZVJvb21SZXNwb25zZUgAEjwKF2xlYXZlX3Jvb21fbm90aWZp",
            "Y2F0aW9uGBAgASgLMhkuUzJDTGVhdmVSb29tTm90aWZpY2F0aW9uSAASMgoS",
            "cm9vbV9yZWFkeV9yZXF1ZXN0GBEgASgLMhQuQzJTUm9vbVJlYWR5UmVxdWVz",
            "dEgAEjQKE3Jvb21fcmVhZHlfcmVzcG9uc2UYEiABKAsyFS5TMkNSb29tUmVh",
            "ZHlSZXNwb25zZUgAEjwKF3Jvb21fcmVhZHlfbm90aWZpY2F0aW9uGBMgASgL",
            "MhkuUzJDUm9vbVJlYWR5Tm90aWZpY2F0aW9uSAASRAocZ2V0X3Jvb21fcmVh",
            "ZHlfc3RhdGVfcmVxdWVzdBgUIAEoCzIcLkMyU0dldFJvb21SZWFkeVN0YXRl",
            "UmVxdWVzdEgAEkYKHWdldF9yb29tX3JlYWR5X3N0YXRlX3Jlc3BvbnNlGBUg",
            "ASgLMh0uUzJDR2V0Um9vbVJlYWR5U3RhdGVSZXNwb25zZUgAEjYKFGdhbWVf",
            "cHJlcGFyZV9yZXF1ZXN0GBYgASgLMhYuQzJTR2FtZVByZXBhcmVSZXF1ZXN0",
            "SAASOAoVZ2FtZV9wcmVwYXJlX3Jlc3BvbnNlGBcgASgLMhcuUzJDR2FtZVBy",
            "ZXBhcmVSZXNwb25zZUgAEkAKGWdhbWVfcHJlcGFyZV9ub3RpZmljYXRpb24Y",
            "GCABKAsyGy5TMkNHYW1lUHJlcGFyZU5vdGlmaWNhdGlvbkgAEjIKEmdhbWVf",
            "c3RhcnRfcmVxdWVzdBgZIAEoCzIULkMyU0dhbWVTdGFydFJlcXVlc3RIABI0",
            "ChNnYW1lX3N0YXJ0X3Jlc3BvbnNlGBogASgLMhUuUzJDR2FtZVN0YXJ0UmVz",
            "cG9uc2VIABI8ChdnYW1lX3N0YXJ0X25vdGlmaWNhdGlvbhgbIAEoCzIZLlMy",
            "Q0dhbWVTdGFydE5vdGlmaWNhdGlvbkgAEjwKF3Bvc2l0aW9uX3VwZGF0ZV9y",
            "ZXF1ZXN0GBwgASgLMhkuQzJTUG9zaXRpb25VcGRhdGVSZXF1ZXN0SAASRgoc",
            "cG9zaXRpb25fdXBkYXRlX25vdGlmaWNhdGlvbhgdIAEoCzIeLlMyQ1Bvc2l0",
            "aW9uVXBkYXRlTm90aWZpY2F0aW9uSABCCQoHcGF5bG9hZCrvBQoIUGFja2V0",
            "SWQSCwoHVW5rbm93bhAAEhAKDExvZ2luUmVxdWVzdBABEhEKDUxvZ2luUmVz",
            "cG9uc2UQAhIaChZTZWxlY3RDaGFyYWN0ZXJSZXF1ZXN0EAMSGwoXU2VsZWN0",
            "Q2hhcmFjdGVyUmVzcG9uc2UQBBIVChFDcmVhdGVSb29tUmVxdWVzdBAFEhYK",
            "EkNyZWF0ZVJvb21SZXNwb25zZRAGEhYKEkdldFJvb21MaXN0UmVxdWVzdBAH",
            "EhcKE0dldFJvb21MaXN0UmVzcG9uc2UQCBITCg9Kb2luUm9vbVJlcXVlc3QQ",
            "CRIUChBKb2luUm9vbVJlc3BvbnNlEAoSGQoVSm9pblJhbmRvbVJvb21SZXF1",
            "ZXN0EAsSGgoWSm9pblJhbmRvbVJvb21SZXNwb25zZRAMEhgKFEpvaW5Sb29t",
            "Tm90aWZpY2F0aW9uEA0SFAoQTGVhdmVSb29tUmVxdWVzdBAOEhUKEUxlYXZl",
            "Um9vbVJlc3BvbnNlEA8SGQoVTGVhdmVSb29tTm90aWZpY2F0aW9uEBASFAoQ",
            "Um9vbVJlYWR5UmVxdWVzdBAREhUKEVJvb21SZWFkeVJlc3BvbnNlEBISGQoV",
            "Um9vbVJlYWR5Tm90aWZpY2F0aW9uEBMSHAoYR2V0Um9vbVJlYWR5U3RhdGVS",
            "ZXF1ZXN0EBQSHQoZR2V0Um9vbVJlYWR5U3RhdGVSZXNwb25zZRAVEhYKEkdh",
            "bWVQcmVwYXJlUmVxdWVzdBAWEhcKE0dhbWVQcmVwYXJlUmVzcG9uc2UQFxIb",
            "ChdHYW1lUHJlcGFyZU5vdGlmaWNhdGlvbhAYEhQKEEdhbWVTdGFydFJlcXVl",
            "c3QQGRIVChFHYW1lU3RhcnRSZXNwb25zZRAaEhkKFUdhbWVTdGFydE5vdGlm",
            "aWNhdGlvbhAbEhkKFVBvc2l0aW9uVXBkYXRlUmVxdWVzdBAcEh4KGlBvc2l0",
            "aW9uVXBkYXRlTm90aWZpY2F0aW9uEB1CJaoCIkhvbHlTaGl0U2VydmVyLlNy",
            "Yy5OZXR3b3JrLlBhY2tldHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::HolyShitServer.Src.Network.Packets.CommonReflection.Descriptor, global::HolyShitServer.Src.Network.Packets.AuthReflection.Descriptor, global::HolyShitServer.Src.Network.Packets.LobbyReflection.Descriptor, global::HolyShitServer.Src.Network.Packets.GameReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::HolyShitServer.Src.Network.Packets.PacketId), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HolyShitServer.Src.Network.Packets.GamePacket), global::HolyShitServer.Src.Network.Packets.GamePacket.Parser, new[]{ "LoginRequest", "LoginResponse", "SelectCharacterRequest", "SelectCharacterResponse", "CreateRoomRequest", "CreateRoomResponse", "GetRoomListRequest", "GetRoomListResponse", "JoinRoomRequest", "JoinRoomResponse", "JoinRandomRoomRequest", "JoinRandomRoomResponse", "JoinRoomNotification", "LeaveRoomRequest", "LeaveRoomResponse", "LeaveRoomNotification", "RoomReadyRequest", "RoomReadyResponse", "RoomReadyNotification", "GetRoomReadyStateRequest", "GetRoomReadyStateResponse", "GamePrepareRequest", "GamePrepareResponse", "GamePrepareNotification", "GameStartRequest", "GameStartResponse", "GameStartNotification", "PositionUpdateRequest", "PositionUpdateNotification" }, new[]{ "Payload" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PacketId {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    /// <summary>
    /// Auth packets
    /// </summary>
    [pbr::OriginalName("LoginRequest")] LoginRequest = 1,
    [pbr::OriginalName("LoginResponse")] LoginResponse = 2,
    [pbr::OriginalName("SelectCharacterRequest")] SelectCharacterRequest = 3,
    [pbr::OriginalName("SelectCharacterResponse")] SelectCharacterResponse = 4,
    /// <summary>
    /// Lobby packets
    /// </summary>
    [pbr::OriginalName("CreateRoomRequest")] CreateRoomRequest = 5,
    [pbr::OriginalName("CreateRoomResponse")] CreateRoomResponse = 6,
    [pbr::OriginalName("GetRoomListRequest")] GetRoomListRequest = 7,
    [pbr::OriginalName("GetRoomListResponse")] GetRoomListResponse = 8,
    [pbr::OriginalName("JoinRoomRequest")] JoinRoomRequest = 9,
    [pbr::OriginalName("JoinRoomResponse")] JoinRoomResponse = 10,
    [pbr::OriginalName("JoinRandomRoomRequest")] JoinRandomRoomRequest = 11,
    [pbr::OriginalName("JoinRandomRoomResponse")] JoinRandomRoomResponse = 12,
    [pbr::OriginalName("JoinRoomNotification")] JoinRoomNotification = 13,
    [pbr::OriginalName("LeaveRoomRequest")] LeaveRoomRequest = 14,
    [pbr::OriginalName("LeaveRoomResponse")] LeaveRoomResponse = 15,
    [pbr::OriginalName("LeaveRoomNotification")] LeaveRoomNotification = 16,
    [pbr::OriginalName("RoomReadyRequest")] RoomReadyRequest = 17,
    [pbr::OriginalName("RoomReadyResponse")] RoomReadyResponse = 18,
    [pbr::OriginalName("RoomReadyNotification")] RoomReadyNotification = 19,
    [pbr::OriginalName("GetRoomReadyStateRequest")] GetRoomReadyStateRequest = 20,
    [pbr::OriginalName("GetRoomReadyStateResponse")] GetRoomReadyStateResponse = 21,
    /// <summary>
    /// Game Start messages
    /// </summary>
    [pbr::OriginalName("GamePrepareRequest")] GamePrepareRequest = 22,
    [pbr::OriginalName("GamePrepareResponse")] GamePrepareResponse = 23,
    [pbr::OriginalName("GamePrepareNotification")] GamePrepareNotification = 24,
    [pbr::OriginalName("GameStartRequest")] GameStartRequest = 25,
    [pbr::OriginalName("GameStartResponse")] GameStartResponse = 26,
    [pbr::OriginalName("GameStartNotification")] GameStartNotification = 27,
    /// <summary>
    /// Game messages
    /// </summary>
    [pbr::OriginalName("PositionUpdateRequest")] PositionUpdateRequest = 28,
    [pbr::OriginalName("PositionUpdateNotification")] PositionUpdateNotification = 29,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GamePacket : pb::IMessage<GamePacket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GamePacket> _parser = new pb::MessageParser<GamePacket>(() => new GamePacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GamePacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HolyShitServer.Src.Network.Packets.GamePacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePacket(GamePacket other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest.Clone();
          break;
        case PayloadOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse.Clone();
          break;
        case PayloadOneofCase.SelectCharacterRequest:
          SelectCharacterRequest = other.SelectCharacterRequest.Clone();
          break;
        case PayloadOneofCase.SelectCharacterResponse:
          SelectCharacterResponse = other.SelectCharacterResponse.Clone();
          break;
        case PayloadOneofCase.CreateRoomRequest:
          CreateRoomRequest = other.CreateRoomRequest.Clone();
          break;
        case PayloadOneofCase.CreateRoomResponse:
          CreateRoomResponse = other.CreateRoomResponse.Clone();
          break;
        case PayloadOneofCase.GetRoomListRequest:
          GetRoomListRequest = other.GetRoomListRequest.Clone();
          break;
        case PayloadOneofCase.GetRoomListResponse:
          GetRoomListResponse = other.GetRoomListResponse.Clone();
          break;
        case PayloadOneofCase.JoinRoomRequest:
          JoinRoomRequest = other.JoinRoomRequest.Clone();
          break;
        case PayloadOneofCase.JoinRoomResponse:
          JoinRoomResponse = other.JoinRoomResponse.Clone();
          break;
        case PayloadOneofCase.JoinRandomRoomRequest:
          JoinRandomRoomRequest = other.JoinRandomRoomRequest.Clone();
          break;
        case PayloadOneofCase.JoinRandomRoomResponse:
          JoinRandomRoomResponse = other.JoinRandomRoomResponse.Clone();
          break;
        case PayloadOneofCase.JoinRoomNotification:
          JoinRoomNotification = other.JoinRoomNotification.Clone();
          break;
        case PayloadOneofCase.LeaveRoomRequest:
          LeaveRoomRequest = other.LeaveRoomRequest.Clone();
          break;
        case PayloadOneofCase.LeaveRoomResponse:
          LeaveRoomResponse = other.LeaveRoomResponse.Clone();
          break;
        case PayloadOneofCase.LeaveRoomNotification:
          LeaveRoomNotification = other.LeaveRoomNotification.Clone();
          break;
        case PayloadOneofCase.RoomReadyRequest:
          RoomReadyRequest = other.RoomReadyRequest.Clone();
          break;
        case PayloadOneofCase.RoomReadyResponse:
          RoomReadyResponse = other.RoomReadyResponse.Clone();
          break;
        case PayloadOneofCase.RoomReadyNotification:
          RoomReadyNotification = other.RoomReadyNotification.Clone();
          break;
        case PayloadOneofCase.GetRoomReadyStateRequest:
          GetRoomReadyStateRequest = other.GetRoomReadyStateRequest.Clone();
          break;
        case PayloadOneofCase.GetRoomReadyStateResponse:
          GetRoomReadyStateResponse = other.GetRoomReadyStateResponse.Clone();
          break;
        case PayloadOneofCase.GamePrepareRequest:
          GamePrepareRequest = other.GamePrepareRequest.Clone();
          break;
        case PayloadOneofCase.GamePrepareResponse:
          GamePrepareResponse = other.GamePrepareResponse.Clone();
          break;
        case PayloadOneofCase.GamePrepareNotification:
          GamePrepareNotification = other.GamePrepareNotification.Clone();
          break;
        case PayloadOneofCase.GameStartRequest:
          GameStartRequest = other.GameStartRequest.Clone();
          break;
        case PayloadOneofCase.GameStartResponse:
          GameStartResponse = other.GameStartResponse.Clone();
          break;
        case PayloadOneofCase.GameStartNotification:
          GameStartNotification = other.GameStartNotification.Clone();
          break;
        case PayloadOneofCase.PositionUpdateRequest:
          PositionUpdateRequest = other.PositionUpdateRequest.Clone();
          break;
        case PayloadOneofCase.PositionUpdateNotification:
          PositionUpdateNotification = other.PositionUpdateNotification.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePacket Clone() {
      return new GamePacket(this);
    }

    /// <summary>Field number for the "login_request" field.</summary>
    public const int LoginRequestFieldNumber = 1;
    /// <summary>
    /// Auth messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SLoginRequest LoginRequest {
      get { return payloadCase_ == PayloadOneofCase.LoginRequest ? (global::HolyShitServer.Src.Network.Packets.C2SLoginRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LoginRequest;
      }
    }

    /// <summary>Field number for the "login_response" field.</summary>
    public const int LoginResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CLoginResponse LoginResponse {
      get { return payloadCase_ == PayloadOneofCase.LoginResponse ? (global::HolyShitServer.Src.Network.Packets.S2CLoginResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LoginResponse;
      }
    }

    /// <summary>Field number for the "select_character_request" field.</summary>
    public const int SelectCharacterRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SSelectCharacterRequest SelectCharacterRequest {
      get { return payloadCase_ == PayloadOneofCase.SelectCharacterRequest ? (global::HolyShitServer.Src.Network.Packets.C2SSelectCharacterRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SelectCharacterRequest;
      }
    }

    /// <summary>Field number for the "select_character_response" field.</summary>
    public const int SelectCharacterResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CSelectCharacterResponse SelectCharacterResponse {
      get { return payloadCase_ == PayloadOneofCase.SelectCharacterResponse ? (global::HolyShitServer.Src.Network.Packets.S2CSelectCharacterResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SelectCharacterResponse;
      }
    }

    /// <summary>Field number for the "create_room_request" field.</summary>
    public const int CreateRoomRequestFieldNumber = 5;
    /// <summary>
    /// Lobby messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SCreateRoomRequest CreateRoomRequest {
      get { return payloadCase_ == PayloadOneofCase.CreateRoomRequest ? (global::HolyShitServer.Src.Network.Packets.C2SCreateRoomRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CreateRoomRequest;
      }
    }

    /// <summary>Field number for the "create_room_response" field.</summary>
    public const int CreateRoomResponseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CCreateRoomResponse CreateRoomResponse {
      get { return payloadCase_ == PayloadOneofCase.CreateRoomResponse ? (global::HolyShitServer.Src.Network.Packets.S2CCreateRoomResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CreateRoomResponse;
      }
    }

    /// <summary>Field number for the "get_room_list_request" field.</summary>
    public const int GetRoomListRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SGetRoomListRequest GetRoomListRequest {
      get { return payloadCase_ == PayloadOneofCase.GetRoomListRequest ? (global::HolyShitServer.Src.Network.Packets.C2SGetRoomListRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetRoomListRequest;
      }
    }

    /// <summary>Field number for the "get_room_list_response" field.</summary>
    public const int GetRoomListResponseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CGetRoomListResponse GetRoomListResponse {
      get { return payloadCase_ == PayloadOneofCase.GetRoomListResponse ? (global::HolyShitServer.Src.Network.Packets.S2CGetRoomListResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetRoomListResponse;
      }
    }

    /// <summary>Field number for the "join_room_request" field.</summary>
    public const int JoinRoomRequestFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SJoinRoomRequest JoinRoomRequest {
      get { return payloadCase_ == PayloadOneofCase.JoinRoomRequest ? (global::HolyShitServer.Src.Network.Packets.C2SJoinRoomRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRoomRequest;
      }
    }

    /// <summary>Field number for the "join_room_response" field.</summary>
    public const int JoinRoomResponseFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CJoinRoomResponse JoinRoomResponse {
      get { return payloadCase_ == PayloadOneofCase.JoinRoomResponse ? (global::HolyShitServer.Src.Network.Packets.S2CJoinRoomResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRoomResponse;
      }
    }

    /// <summary>Field number for the "join_random_room_request" field.</summary>
    public const int JoinRandomRoomRequestFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SJoinRandomRoomRequest JoinRandomRoomRequest {
      get { return payloadCase_ == PayloadOneofCase.JoinRandomRoomRequest ? (global::HolyShitServer.Src.Network.Packets.C2SJoinRandomRoomRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRandomRoomRequest;
      }
    }

    /// <summary>Field number for the "join_random_room_response" field.</summary>
    public const int JoinRandomRoomResponseFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CJoinRandomRoomResponse JoinRandomRoomResponse {
      get { return payloadCase_ == PayloadOneofCase.JoinRandomRoomResponse ? (global::HolyShitServer.Src.Network.Packets.S2CJoinRandomRoomResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRandomRoomResponse;
      }
    }

    /// <summary>Field number for the "join_room_notification" field.</summary>
    public const int JoinRoomNotificationFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CJoinRoomNotification JoinRoomNotification {
      get { return payloadCase_ == PayloadOneofCase.JoinRoomNotification ? (global::HolyShitServer.Src.Network.Packets.S2CJoinRoomNotification) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinRoomNotification;
      }
    }

    /// <summary>Field number for the "leave_room_request" field.</summary>
    public const int LeaveRoomRequestFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SLeaveRoomRequest LeaveRoomRequest {
      get { return payloadCase_ == PayloadOneofCase.LeaveRoomRequest ? (global::HolyShitServer.Src.Network.Packets.C2SLeaveRoomRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LeaveRoomRequest;
      }
    }

    /// <summary>Field number for the "leave_room_response" field.</summary>
    public const int LeaveRoomResponseFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomResponse LeaveRoomResponse {
      get { return payloadCase_ == PayloadOneofCase.LeaveRoomResponse ? (global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LeaveRoomResponse;
      }
    }

    /// <summary>Field number for the "leave_room_notification" field.</summary>
    public const int LeaveRoomNotificationFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomNotification LeaveRoomNotification {
      get { return payloadCase_ == PayloadOneofCase.LeaveRoomNotification ? (global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomNotification) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LeaveRoomNotification;
      }
    }

    /// <summary>Field number for the "room_ready_request" field.</summary>
    public const int RoomReadyRequestFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SRoomReadyRequest RoomReadyRequest {
      get { return payloadCase_ == PayloadOneofCase.RoomReadyRequest ? (global::HolyShitServer.Src.Network.Packets.C2SRoomReadyRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RoomReadyRequest;
      }
    }

    /// <summary>Field number for the "room_ready_response" field.</summary>
    public const int RoomReadyResponseFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CRoomReadyResponse RoomReadyResponse {
      get { return payloadCase_ == PayloadOneofCase.RoomReadyResponse ? (global::HolyShitServer.Src.Network.Packets.S2CRoomReadyResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RoomReadyResponse;
      }
    }

    /// <summary>Field number for the "room_ready_notification" field.</summary>
    public const int RoomReadyNotificationFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CRoomReadyNotification RoomReadyNotification {
      get { return payloadCase_ == PayloadOneofCase.RoomReadyNotification ? (global::HolyShitServer.Src.Network.Packets.S2CRoomReadyNotification) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.RoomReadyNotification;
      }
    }

    /// <summary>Field number for the "get_room_ready_state_request" field.</summary>
    public const int GetRoomReadyStateRequestFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SGetRoomReadyStateRequest GetRoomReadyStateRequest {
      get { return payloadCase_ == PayloadOneofCase.GetRoomReadyStateRequest ? (global::HolyShitServer.Src.Network.Packets.C2SGetRoomReadyStateRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetRoomReadyStateRequest;
      }
    }

    /// <summary>Field number for the "get_room_ready_state_response" field.</summary>
    public const int GetRoomReadyStateResponseFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CGetRoomReadyStateResponse GetRoomReadyStateResponse {
      get { return payloadCase_ == PayloadOneofCase.GetRoomReadyStateResponse ? (global::HolyShitServer.Src.Network.Packets.S2CGetRoomReadyStateResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetRoomReadyStateResponse;
      }
    }

    /// <summary>Field number for the "game_prepare_request" field.</summary>
    public const int GamePrepareRequestFieldNumber = 22;
    /// <summary>
    /// Game Start messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SGamePrepareRequest GamePrepareRequest {
      get { return payloadCase_ == PayloadOneofCase.GamePrepareRequest ? (global::HolyShitServer.Src.Network.Packets.C2SGamePrepareRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GamePrepareRequest;
      }
    }

    /// <summary>Field number for the "game_prepare_response" field.</summary>
    public const int GamePrepareResponseFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CGamePrepareResponse GamePrepareResponse {
      get { return payloadCase_ == PayloadOneofCase.GamePrepareResponse ? (global::HolyShitServer.Src.Network.Packets.S2CGamePrepareResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GamePrepareResponse;
      }
    }

    /// <summary>Field number for the "game_prepare_notification" field.</summary>
    public const int GamePrepareNotificationFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CGamePrepareNotification GamePrepareNotification {
      get { return payloadCase_ == PayloadOneofCase.GamePrepareNotification ? (global::HolyShitServer.Src.Network.Packets.S2CGamePrepareNotification) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GamePrepareNotification;
      }
    }

    /// <summary>Field number for the "game_start_request" field.</summary>
    public const int GameStartRequestFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SGameStartRequest GameStartRequest {
      get { return payloadCase_ == PayloadOneofCase.GameStartRequest ? (global::HolyShitServer.Src.Network.Packets.C2SGameStartRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GameStartRequest;
      }
    }

    /// <summary>Field number for the "game_start_response" field.</summary>
    public const int GameStartResponseFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CGameStartResponse GameStartResponse {
      get { return payloadCase_ == PayloadOneofCase.GameStartResponse ? (global::HolyShitServer.Src.Network.Packets.S2CGameStartResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GameStartResponse;
      }
    }

    /// <summary>Field number for the "game_start_notification" field.</summary>
    public const int GameStartNotificationFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CGameStartNotification GameStartNotification {
      get { return payloadCase_ == PayloadOneofCase.GameStartNotification ? (global::HolyShitServer.Src.Network.Packets.S2CGameStartNotification) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GameStartNotification;
      }
    }

    /// <summary>Field number for the "position_update_request" field.</summary>
    public const int PositionUpdateRequestFieldNumber = 28;
    /// <summary>
    /// Game messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.C2SPositionUpdateRequest PositionUpdateRequest {
      get { return payloadCase_ == PayloadOneofCase.PositionUpdateRequest ? (global::HolyShitServer.Src.Network.Packets.C2SPositionUpdateRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PositionUpdateRequest;
      }
    }

    /// <summary>Field number for the "position_update_notification" field.</summary>
    public const int PositionUpdateNotificationFieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::HolyShitServer.Src.Network.Packets.S2CPositionUpdateNotification PositionUpdateNotification {
      get { return payloadCase_ == PayloadOneofCase.PositionUpdateNotification ? (global::HolyShitServer.Src.Network.Packets.S2CPositionUpdateNotification) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PositionUpdateNotification;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      LoginRequest = 1,
      LoginResponse = 2,
      SelectCharacterRequest = 3,
      SelectCharacterResponse = 4,
      CreateRoomRequest = 5,
      CreateRoomResponse = 6,
      GetRoomListRequest = 7,
      GetRoomListResponse = 8,
      JoinRoomRequest = 9,
      JoinRoomResponse = 10,
      JoinRandomRoomRequest = 11,
      JoinRandomRoomResponse = 12,
      JoinRoomNotification = 13,
      LeaveRoomRequest = 14,
      LeaveRoomResponse = 15,
      LeaveRoomNotification = 16,
      RoomReadyRequest = 17,
      RoomReadyResponse = 18,
      RoomReadyNotification = 19,
      GetRoomReadyStateRequest = 20,
      GetRoomReadyStateResponse = 21,
      GamePrepareRequest = 22,
      GamePrepareResponse = 23,
      GamePrepareNotification = 24,
      GameStartRequest = 25,
      GameStartResponse = 26,
      GameStartNotification = 27,
      PositionUpdateRequest = 28,
      PositionUpdateNotification = 29,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GamePacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GamePacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoginRequest, other.LoginRequest)) return false;
      if (!object.Equals(LoginResponse, other.LoginResponse)) return false;
      if (!object.Equals(SelectCharacterRequest, other.SelectCharacterRequest)) return false;
      if (!object.Equals(SelectCharacterResponse, other.SelectCharacterResponse)) return false;
      if (!object.Equals(CreateRoomRequest, other.CreateRoomRequest)) return false;
      if (!object.Equals(CreateRoomResponse, other.CreateRoomResponse)) return false;
      if (!object.Equals(GetRoomListRequest, other.GetRoomListRequest)) return false;
      if (!object.Equals(GetRoomListResponse, other.GetRoomListResponse)) return false;
      if (!object.Equals(JoinRoomRequest, other.JoinRoomRequest)) return false;
      if (!object.Equals(JoinRoomResponse, other.JoinRoomResponse)) return false;
      if (!object.Equals(JoinRandomRoomRequest, other.JoinRandomRoomRequest)) return false;
      if (!object.Equals(JoinRandomRoomResponse, other.JoinRandomRoomResponse)) return false;
      if (!object.Equals(JoinRoomNotification, other.JoinRoomNotification)) return false;
      if (!object.Equals(LeaveRoomRequest, other.LeaveRoomRequest)) return false;
      if (!object.Equals(LeaveRoomResponse, other.LeaveRoomResponse)) return false;
      if (!object.Equals(LeaveRoomNotification, other.LeaveRoomNotification)) return false;
      if (!object.Equals(RoomReadyRequest, other.RoomReadyRequest)) return false;
      if (!object.Equals(RoomReadyResponse, other.RoomReadyResponse)) return false;
      if (!object.Equals(RoomReadyNotification, other.RoomReadyNotification)) return false;
      if (!object.Equals(GetRoomReadyStateRequest, other.GetRoomReadyStateRequest)) return false;
      if (!object.Equals(GetRoomReadyStateResponse, other.GetRoomReadyStateResponse)) return false;
      if (!object.Equals(GamePrepareRequest, other.GamePrepareRequest)) return false;
      if (!object.Equals(GamePrepareResponse, other.GamePrepareResponse)) return false;
      if (!object.Equals(GamePrepareNotification, other.GamePrepareNotification)) return false;
      if (!object.Equals(GameStartRequest, other.GameStartRequest)) return false;
      if (!object.Equals(GameStartResponse, other.GameStartResponse)) return false;
      if (!object.Equals(GameStartNotification, other.GameStartNotification)) return false;
      if (!object.Equals(PositionUpdateRequest, other.PositionUpdateRequest)) return false;
      if (!object.Equals(PositionUpdateNotification, other.PositionUpdateNotification)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.LoginRequest) hash ^= LoginRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LoginResponse) hash ^= LoginResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SelectCharacterRequest) hash ^= SelectCharacterRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SelectCharacterResponse) hash ^= SelectCharacterResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) hash ^= CreateRoomRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) hash ^= CreateRoomResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetRoomListRequest) hash ^= GetRoomListRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetRoomListResponse) hash ^= GetRoomListResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) hash ^= JoinRoomRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) hash ^= JoinRoomResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomRequest) hash ^= JoinRandomRoomRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomResponse) hash ^= JoinRandomRoomResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) hash ^= JoinRoomNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LeaveRoomRequest) hash ^= LeaveRoomRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LeaveRoomResponse) hash ^= LeaveRoomResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LeaveRoomNotification) hash ^= LeaveRoomNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RoomReadyRequest) hash ^= RoomReadyRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RoomReadyResponse) hash ^= RoomReadyResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.RoomReadyNotification) hash ^= RoomReadyNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateRequest) hash ^= GetRoomReadyStateRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateResponse) hash ^= GetRoomReadyStateResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GamePrepareRequest) hash ^= GamePrepareRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GamePrepareResponse) hash ^= GamePrepareResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GamePrepareNotification) hash ^= GamePrepareNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GameStartRequest) hash ^= GameStartRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GameStartResponse) hash ^= GameStartResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GameStartNotification) hash ^= GameStartNotification.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PositionUpdateRequest) hash ^= PositionUpdateRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PositionUpdateNotification) hash ^= PositionUpdateNotification.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (payloadCase_ == PayloadOneofCase.LoginRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginRequest);
      }
      if (payloadCase_ == PayloadOneofCase.LoginResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(LoginResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SelectCharacterRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(SelectCharacterRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SelectCharacterResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(SelectCharacterResponse);
      }
      if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomListRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(GetRoomListRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomListResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(GetRoomListResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(JoinRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(JoinRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomRequest) {
        output.WriteRawTag(90);
        output.WriteMessage(JoinRandomRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomResponse) {
        output.WriteRawTag(98);
        output.WriteMessage(JoinRandomRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
        output.WriteRawTag(106);
        output.WriteMessage(JoinRoomNotification);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomRequest) {
        output.WriteRawTag(114);
        output.WriteMessage(LeaveRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomResponse) {
        output.WriteRawTag(122);
        output.WriteMessage(LeaveRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomNotification) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(LeaveRoomNotification);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyRequest) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(RoomReadyRequest);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyResponse) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RoomReadyResponse);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyNotification) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RoomReadyNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateRequest) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GetRoomReadyStateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateResponse) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(GetRoomReadyStateResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareRequest) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(GamePrepareRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareResponse) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(GamePrepareResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareNotification) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(GamePrepareNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartRequest) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(GameStartRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartResponse) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(GameStartResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartNotification) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(GameStartNotification);
      }
      if (payloadCase_ == PayloadOneofCase.PositionUpdateRequest) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(PositionUpdateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.PositionUpdateNotification) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(PositionUpdateNotification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (payloadCase_ == PayloadOneofCase.LoginRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginRequest);
      }
      if (payloadCase_ == PayloadOneofCase.LoginResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(LoginResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SelectCharacterRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(SelectCharacterRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SelectCharacterResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(SelectCharacterResponse);
      }
      if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomListRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(GetRoomListRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomListResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(GetRoomListResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(JoinRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(JoinRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomRequest) {
        output.WriteRawTag(90);
        output.WriteMessage(JoinRandomRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomResponse) {
        output.WriteRawTag(98);
        output.WriteMessage(JoinRandomRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
        output.WriteRawTag(106);
        output.WriteMessage(JoinRoomNotification);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomRequest) {
        output.WriteRawTag(114);
        output.WriteMessage(LeaveRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomResponse) {
        output.WriteRawTag(122);
        output.WriteMessage(LeaveRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomNotification) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(LeaveRoomNotification);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyRequest) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(RoomReadyRequest);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyResponse) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RoomReadyResponse);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyNotification) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(RoomReadyNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateRequest) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(GetRoomReadyStateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateResponse) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(GetRoomReadyStateResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareRequest) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(GamePrepareRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareResponse) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(GamePrepareResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareNotification) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(GamePrepareNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartRequest) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(GameStartRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartResponse) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(GameStartResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartNotification) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(GameStartNotification);
      }
      if (payloadCase_ == PayloadOneofCase.PositionUpdateRequest) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(PositionUpdateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.PositionUpdateNotification) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(PositionUpdateNotification);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.LoginRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginRequest);
      }
      if (payloadCase_ == PayloadOneofCase.LoginResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SelectCharacterRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectCharacterRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SelectCharacterResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectCharacterResponse);
      }
      if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomListRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRoomListRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomListResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetRoomListResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinRandomRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRandomRoomResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinRandomRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinRoomNotification);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveRoomRequest);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveRoomResponse);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveRoomNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LeaveRoomNotification);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomReadyRequest);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomReadyResponse);
      }
      if (payloadCase_ == PayloadOneofCase.RoomReadyNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomReadyNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRoomReadyStateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GetRoomReadyStateResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GamePrepareRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GamePrepareResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GamePrepareNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GamePrepareNotification);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameStartRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameStartResponse);
      }
      if (payloadCase_ == PayloadOneofCase.GameStartNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameStartNotification);
      }
      if (payloadCase_ == PayloadOneofCase.PositionUpdateRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PositionUpdateRequest);
      }
      if (payloadCase_ == PayloadOneofCase.PositionUpdateNotification) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PositionUpdateNotification);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GamePacket other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.LoginRequest:
          if (LoginRequest == null) {
            LoginRequest = new global::HolyShitServer.Src.Network.Packets.C2SLoginRequest();
          }
          LoginRequest.MergeFrom(other.LoginRequest);
          break;
        case PayloadOneofCase.LoginResponse:
          if (LoginResponse == null) {
            LoginResponse = new global::HolyShitServer.Src.Network.Packets.S2CLoginResponse();
          }
          LoginResponse.MergeFrom(other.LoginResponse);
          break;
        case PayloadOneofCase.SelectCharacterRequest:
          if (SelectCharacterRequest == null) {
            SelectCharacterRequest = new global::HolyShitServer.Src.Network.Packets.C2SSelectCharacterRequest();
          }
          SelectCharacterRequest.MergeFrom(other.SelectCharacterRequest);
          break;
        case PayloadOneofCase.SelectCharacterResponse:
          if (SelectCharacterResponse == null) {
            SelectCharacterResponse = new global::HolyShitServer.Src.Network.Packets.S2CSelectCharacterResponse();
          }
          SelectCharacterResponse.MergeFrom(other.SelectCharacterResponse);
          break;
        case PayloadOneofCase.CreateRoomRequest:
          if (CreateRoomRequest == null) {
            CreateRoomRequest = new global::HolyShitServer.Src.Network.Packets.C2SCreateRoomRequest();
          }
          CreateRoomRequest.MergeFrom(other.CreateRoomRequest);
          break;
        case PayloadOneofCase.CreateRoomResponse:
          if (CreateRoomResponse == null) {
            CreateRoomResponse = new global::HolyShitServer.Src.Network.Packets.S2CCreateRoomResponse();
          }
          CreateRoomResponse.MergeFrom(other.CreateRoomResponse);
          break;
        case PayloadOneofCase.GetRoomListRequest:
          if (GetRoomListRequest == null) {
            GetRoomListRequest = new global::HolyShitServer.Src.Network.Packets.C2SGetRoomListRequest();
          }
          GetRoomListRequest.MergeFrom(other.GetRoomListRequest);
          break;
        case PayloadOneofCase.GetRoomListResponse:
          if (GetRoomListResponse == null) {
            GetRoomListResponse = new global::HolyShitServer.Src.Network.Packets.S2CGetRoomListResponse();
          }
          GetRoomListResponse.MergeFrom(other.GetRoomListResponse);
          break;
        case PayloadOneofCase.JoinRoomRequest:
          if (JoinRoomRequest == null) {
            JoinRoomRequest = new global::HolyShitServer.Src.Network.Packets.C2SJoinRoomRequest();
          }
          JoinRoomRequest.MergeFrom(other.JoinRoomRequest);
          break;
        case PayloadOneofCase.JoinRoomResponse:
          if (JoinRoomResponse == null) {
            JoinRoomResponse = new global::HolyShitServer.Src.Network.Packets.S2CJoinRoomResponse();
          }
          JoinRoomResponse.MergeFrom(other.JoinRoomResponse);
          break;
        case PayloadOneofCase.JoinRandomRoomRequest:
          if (JoinRandomRoomRequest == null) {
            JoinRandomRoomRequest = new global::HolyShitServer.Src.Network.Packets.C2SJoinRandomRoomRequest();
          }
          JoinRandomRoomRequest.MergeFrom(other.JoinRandomRoomRequest);
          break;
        case PayloadOneofCase.JoinRandomRoomResponse:
          if (JoinRandomRoomResponse == null) {
            JoinRandomRoomResponse = new global::HolyShitServer.Src.Network.Packets.S2CJoinRandomRoomResponse();
          }
          JoinRandomRoomResponse.MergeFrom(other.JoinRandomRoomResponse);
          break;
        case PayloadOneofCase.JoinRoomNotification:
          if (JoinRoomNotification == null) {
            JoinRoomNotification = new global::HolyShitServer.Src.Network.Packets.S2CJoinRoomNotification();
          }
          JoinRoomNotification.MergeFrom(other.JoinRoomNotification);
          break;
        case PayloadOneofCase.LeaveRoomRequest:
          if (LeaveRoomRequest == null) {
            LeaveRoomRequest = new global::HolyShitServer.Src.Network.Packets.C2SLeaveRoomRequest();
          }
          LeaveRoomRequest.MergeFrom(other.LeaveRoomRequest);
          break;
        case PayloadOneofCase.LeaveRoomResponse:
          if (LeaveRoomResponse == null) {
            LeaveRoomResponse = new global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomResponse();
          }
          LeaveRoomResponse.MergeFrom(other.LeaveRoomResponse);
          break;
        case PayloadOneofCase.LeaveRoomNotification:
          if (LeaveRoomNotification == null) {
            LeaveRoomNotification = new global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomNotification();
          }
          LeaveRoomNotification.MergeFrom(other.LeaveRoomNotification);
          break;
        case PayloadOneofCase.RoomReadyRequest:
          if (RoomReadyRequest == null) {
            RoomReadyRequest = new global::HolyShitServer.Src.Network.Packets.C2SRoomReadyRequest();
          }
          RoomReadyRequest.MergeFrom(other.RoomReadyRequest);
          break;
        case PayloadOneofCase.RoomReadyResponse:
          if (RoomReadyResponse == null) {
            RoomReadyResponse = new global::HolyShitServer.Src.Network.Packets.S2CRoomReadyResponse();
          }
          RoomReadyResponse.MergeFrom(other.RoomReadyResponse);
          break;
        case PayloadOneofCase.RoomReadyNotification:
          if (RoomReadyNotification == null) {
            RoomReadyNotification = new global::HolyShitServer.Src.Network.Packets.S2CRoomReadyNotification();
          }
          RoomReadyNotification.MergeFrom(other.RoomReadyNotification);
          break;
        case PayloadOneofCase.GetRoomReadyStateRequest:
          if (GetRoomReadyStateRequest == null) {
            GetRoomReadyStateRequest = new global::HolyShitServer.Src.Network.Packets.C2SGetRoomReadyStateRequest();
          }
          GetRoomReadyStateRequest.MergeFrom(other.GetRoomReadyStateRequest);
          break;
        case PayloadOneofCase.GetRoomReadyStateResponse:
          if (GetRoomReadyStateResponse == null) {
            GetRoomReadyStateResponse = new global::HolyShitServer.Src.Network.Packets.S2CGetRoomReadyStateResponse();
          }
          GetRoomReadyStateResponse.MergeFrom(other.GetRoomReadyStateResponse);
          break;
        case PayloadOneofCase.GamePrepareRequest:
          if (GamePrepareRequest == null) {
            GamePrepareRequest = new global::HolyShitServer.Src.Network.Packets.C2SGamePrepareRequest();
          }
          GamePrepareRequest.MergeFrom(other.GamePrepareRequest);
          break;
        case PayloadOneofCase.GamePrepareResponse:
          if (GamePrepareResponse == null) {
            GamePrepareResponse = new global::HolyShitServer.Src.Network.Packets.S2CGamePrepareResponse();
          }
          GamePrepareResponse.MergeFrom(other.GamePrepareResponse);
          break;
        case PayloadOneofCase.GamePrepareNotification:
          if (GamePrepareNotification == null) {
            GamePrepareNotification = new global::HolyShitServer.Src.Network.Packets.S2CGamePrepareNotification();
          }
          GamePrepareNotification.MergeFrom(other.GamePrepareNotification);
          break;
        case PayloadOneofCase.GameStartRequest:
          if (GameStartRequest == null) {
            GameStartRequest = new global::HolyShitServer.Src.Network.Packets.C2SGameStartRequest();
          }
          GameStartRequest.MergeFrom(other.GameStartRequest);
          break;
        case PayloadOneofCase.GameStartResponse:
          if (GameStartResponse == null) {
            GameStartResponse = new global::HolyShitServer.Src.Network.Packets.S2CGameStartResponse();
          }
          GameStartResponse.MergeFrom(other.GameStartResponse);
          break;
        case PayloadOneofCase.GameStartNotification:
          if (GameStartNotification == null) {
            GameStartNotification = new global::HolyShitServer.Src.Network.Packets.S2CGameStartNotification();
          }
          GameStartNotification.MergeFrom(other.GameStartNotification);
          break;
        case PayloadOneofCase.PositionUpdateRequest:
          if (PositionUpdateRequest == null) {
            PositionUpdateRequest = new global::HolyShitServer.Src.Network.Packets.C2SPositionUpdateRequest();
          }
          PositionUpdateRequest.MergeFrom(other.PositionUpdateRequest);
          break;
        case PayloadOneofCase.PositionUpdateNotification:
          if (PositionUpdateNotification == null) {
            PositionUpdateNotification = new global::HolyShitServer.Src.Network.Packets.S2CPositionUpdateNotification();
          }
          PositionUpdateNotification.MergeFrom(other.PositionUpdateNotification);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::HolyShitServer.Src.Network.Packets.C2SLoginRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SLoginRequest();
            if (payloadCase_ == PayloadOneofCase.LoginRequest) {
              subBuilder.MergeFrom(LoginRequest);
            }
            input.ReadMessage(subBuilder);
            LoginRequest = subBuilder;
            break;
          }
          case 18: {
            global::HolyShitServer.Src.Network.Packets.S2CLoginResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CLoginResponse();
            if (payloadCase_ == PayloadOneofCase.LoginResponse) {
              subBuilder.MergeFrom(LoginResponse);
            }
            input.ReadMessage(subBuilder);
            LoginResponse = subBuilder;
            break;
          }
          case 26: {
            global::HolyShitServer.Src.Network.Packets.C2SSelectCharacterRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SSelectCharacterRequest();
            if (payloadCase_ == PayloadOneofCase.SelectCharacterRequest) {
              subBuilder.MergeFrom(SelectCharacterRequest);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterRequest = subBuilder;
            break;
          }
          case 34: {
            global::HolyShitServer.Src.Network.Packets.S2CSelectCharacterResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CSelectCharacterResponse();
            if (payloadCase_ == PayloadOneofCase.SelectCharacterResponse) {
              subBuilder.MergeFrom(SelectCharacterResponse);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterResponse = subBuilder;
            break;
          }
          case 42: {
            global::HolyShitServer.Src.Network.Packets.C2SCreateRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SCreateRoomRequest();
            if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
              subBuilder.MergeFrom(CreateRoomRequest);
            }
            input.ReadMessage(subBuilder);
            CreateRoomRequest = subBuilder;
            break;
          }
          case 50: {
            global::HolyShitServer.Src.Network.Packets.S2CCreateRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CCreateRoomResponse();
            if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
              subBuilder.MergeFrom(CreateRoomResponse);
            }
            input.ReadMessage(subBuilder);
            CreateRoomResponse = subBuilder;
            break;
          }
          case 58: {
            global::HolyShitServer.Src.Network.Packets.C2SGetRoomListRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGetRoomListRequest();
            if (payloadCase_ == PayloadOneofCase.GetRoomListRequest) {
              subBuilder.MergeFrom(GetRoomListRequest);
            }
            input.ReadMessage(subBuilder);
            GetRoomListRequest = subBuilder;
            break;
          }
          case 66: {
            global::HolyShitServer.Src.Network.Packets.S2CGetRoomListResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGetRoomListResponse();
            if (payloadCase_ == PayloadOneofCase.GetRoomListResponse) {
              subBuilder.MergeFrom(GetRoomListResponse);
            }
            input.ReadMessage(subBuilder);
            GetRoomListResponse = subBuilder;
            break;
          }
          case 74: {
            global::HolyShitServer.Src.Network.Packets.C2SJoinRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SJoinRoomRequest();
            if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
              subBuilder.MergeFrom(JoinRoomRequest);
            }
            input.ReadMessage(subBuilder);
            JoinRoomRequest = subBuilder;
            break;
          }
          case 82: {
            global::HolyShitServer.Src.Network.Packets.S2CJoinRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CJoinRoomResponse();
            if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
              subBuilder.MergeFrom(JoinRoomResponse);
            }
            input.ReadMessage(subBuilder);
            JoinRoomResponse = subBuilder;
            break;
          }
          case 90: {
            global::HolyShitServer.Src.Network.Packets.C2SJoinRandomRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SJoinRandomRoomRequest();
            if (payloadCase_ == PayloadOneofCase.JoinRandomRoomRequest) {
              subBuilder.MergeFrom(JoinRandomRoomRequest);
            }
            input.ReadMessage(subBuilder);
            JoinRandomRoomRequest = subBuilder;
            break;
          }
          case 98: {
            global::HolyShitServer.Src.Network.Packets.S2CJoinRandomRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CJoinRandomRoomResponse();
            if (payloadCase_ == PayloadOneofCase.JoinRandomRoomResponse) {
              subBuilder.MergeFrom(JoinRandomRoomResponse);
            }
            input.ReadMessage(subBuilder);
            JoinRandomRoomResponse = subBuilder;
            break;
          }
          case 106: {
            global::HolyShitServer.Src.Network.Packets.S2CJoinRoomNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CJoinRoomNotification();
            if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
              subBuilder.MergeFrom(JoinRoomNotification);
            }
            input.ReadMessage(subBuilder);
            JoinRoomNotification = subBuilder;
            break;
          }
          case 114: {
            global::HolyShitServer.Src.Network.Packets.C2SLeaveRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SLeaveRoomRequest();
            if (payloadCase_ == PayloadOneofCase.LeaveRoomRequest) {
              subBuilder.MergeFrom(LeaveRoomRequest);
            }
            input.ReadMessage(subBuilder);
            LeaveRoomRequest = subBuilder;
            break;
          }
          case 122: {
            global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomResponse();
            if (payloadCase_ == PayloadOneofCase.LeaveRoomResponse) {
              subBuilder.MergeFrom(LeaveRoomResponse);
            }
            input.ReadMessage(subBuilder);
            LeaveRoomResponse = subBuilder;
            break;
          }
          case 130: {
            global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomNotification();
            if (payloadCase_ == PayloadOneofCase.LeaveRoomNotification) {
              subBuilder.MergeFrom(LeaveRoomNotification);
            }
            input.ReadMessage(subBuilder);
            LeaveRoomNotification = subBuilder;
            break;
          }
          case 138: {
            global::HolyShitServer.Src.Network.Packets.C2SRoomReadyRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SRoomReadyRequest();
            if (payloadCase_ == PayloadOneofCase.RoomReadyRequest) {
              subBuilder.MergeFrom(RoomReadyRequest);
            }
            input.ReadMessage(subBuilder);
            RoomReadyRequest = subBuilder;
            break;
          }
          case 146: {
            global::HolyShitServer.Src.Network.Packets.S2CRoomReadyResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CRoomReadyResponse();
            if (payloadCase_ == PayloadOneofCase.RoomReadyResponse) {
              subBuilder.MergeFrom(RoomReadyResponse);
            }
            input.ReadMessage(subBuilder);
            RoomReadyResponse = subBuilder;
            break;
          }
          case 154: {
            global::HolyShitServer.Src.Network.Packets.S2CRoomReadyNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CRoomReadyNotification();
            if (payloadCase_ == PayloadOneofCase.RoomReadyNotification) {
              subBuilder.MergeFrom(RoomReadyNotification);
            }
            input.ReadMessage(subBuilder);
            RoomReadyNotification = subBuilder;
            break;
          }
          case 162: {
            global::HolyShitServer.Src.Network.Packets.C2SGetRoomReadyStateRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGetRoomReadyStateRequest();
            if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateRequest) {
              subBuilder.MergeFrom(GetRoomReadyStateRequest);
            }
            input.ReadMessage(subBuilder);
            GetRoomReadyStateRequest = subBuilder;
            break;
          }
          case 170: {
            global::HolyShitServer.Src.Network.Packets.S2CGetRoomReadyStateResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGetRoomReadyStateResponse();
            if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateResponse) {
              subBuilder.MergeFrom(GetRoomReadyStateResponse);
            }
            input.ReadMessage(subBuilder);
            GetRoomReadyStateResponse = subBuilder;
            break;
          }
          case 178: {
            global::HolyShitServer.Src.Network.Packets.C2SGamePrepareRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGamePrepareRequest();
            if (payloadCase_ == PayloadOneofCase.GamePrepareRequest) {
              subBuilder.MergeFrom(GamePrepareRequest);
            }
            input.ReadMessage(subBuilder);
            GamePrepareRequest = subBuilder;
            break;
          }
          case 186: {
            global::HolyShitServer.Src.Network.Packets.S2CGamePrepareResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGamePrepareResponse();
            if (payloadCase_ == PayloadOneofCase.GamePrepareResponse) {
              subBuilder.MergeFrom(GamePrepareResponse);
            }
            input.ReadMessage(subBuilder);
            GamePrepareResponse = subBuilder;
            break;
          }
          case 194: {
            global::HolyShitServer.Src.Network.Packets.S2CGamePrepareNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGamePrepareNotification();
            if (payloadCase_ == PayloadOneofCase.GamePrepareNotification) {
              subBuilder.MergeFrom(GamePrepareNotification);
            }
            input.ReadMessage(subBuilder);
            GamePrepareNotification = subBuilder;
            break;
          }
          case 202: {
            global::HolyShitServer.Src.Network.Packets.C2SGameStartRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGameStartRequest();
            if (payloadCase_ == PayloadOneofCase.GameStartRequest) {
              subBuilder.MergeFrom(GameStartRequest);
            }
            input.ReadMessage(subBuilder);
            GameStartRequest = subBuilder;
            break;
          }
          case 210: {
            global::HolyShitServer.Src.Network.Packets.S2CGameStartResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGameStartResponse();
            if (payloadCase_ == PayloadOneofCase.GameStartResponse) {
              subBuilder.MergeFrom(GameStartResponse);
            }
            input.ReadMessage(subBuilder);
            GameStartResponse = subBuilder;
            break;
          }
          case 218: {
            global::HolyShitServer.Src.Network.Packets.S2CGameStartNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGameStartNotification();
            if (payloadCase_ == PayloadOneofCase.GameStartNotification) {
              subBuilder.MergeFrom(GameStartNotification);
            }
            input.ReadMessage(subBuilder);
            GameStartNotification = subBuilder;
            break;
          }
          case 226: {
            global::HolyShitServer.Src.Network.Packets.C2SPositionUpdateRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SPositionUpdateRequest();
            if (payloadCase_ == PayloadOneofCase.PositionUpdateRequest) {
              subBuilder.MergeFrom(PositionUpdateRequest);
            }
            input.ReadMessage(subBuilder);
            PositionUpdateRequest = subBuilder;
            break;
          }
          case 234: {
            global::HolyShitServer.Src.Network.Packets.S2CPositionUpdateNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CPositionUpdateNotification();
            if (payloadCase_ == PayloadOneofCase.PositionUpdateNotification) {
              subBuilder.MergeFrom(PositionUpdateNotification);
            }
            input.ReadMessage(subBuilder);
            PositionUpdateNotification = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::HolyShitServer.Src.Network.Packets.C2SLoginRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SLoginRequest();
            if (payloadCase_ == PayloadOneofCase.LoginRequest) {
              subBuilder.MergeFrom(LoginRequest);
            }
            input.ReadMessage(subBuilder);
            LoginRequest = subBuilder;
            break;
          }
          case 18: {
            global::HolyShitServer.Src.Network.Packets.S2CLoginResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CLoginResponse();
            if (payloadCase_ == PayloadOneofCase.LoginResponse) {
              subBuilder.MergeFrom(LoginResponse);
            }
            input.ReadMessage(subBuilder);
            LoginResponse = subBuilder;
            break;
          }
          case 26: {
            global::HolyShitServer.Src.Network.Packets.C2SSelectCharacterRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SSelectCharacterRequest();
            if (payloadCase_ == PayloadOneofCase.SelectCharacterRequest) {
              subBuilder.MergeFrom(SelectCharacterRequest);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterRequest = subBuilder;
            break;
          }
          case 34: {
            global::HolyShitServer.Src.Network.Packets.S2CSelectCharacterResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CSelectCharacterResponse();
            if (payloadCase_ == PayloadOneofCase.SelectCharacterResponse) {
              subBuilder.MergeFrom(SelectCharacterResponse);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterResponse = subBuilder;
            break;
          }
          case 42: {
            global::HolyShitServer.Src.Network.Packets.C2SCreateRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SCreateRoomRequest();
            if (payloadCase_ == PayloadOneofCase.CreateRoomRequest) {
              subBuilder.MergeFrom(CreateRoomRequest);
            }
            input.ReadMessage(subBuilder);
            CreateRoomRequest = subBuilder;
            break;
          }
          case 50: {
            global::HolyShitServer.Src.Network.Packets.S2CCreateRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CCreateRoomResponse();
            if (payloadCase_ == PayloadOneofCase.CreateRoomResponse) {
              subBuilder.MergeFrom(CreateRoomResponse);
            }
            input.ReadMessage(subBuilder);
            CreateRoomResponse = subBuilder;
            break;
          }
          case 58: {
            global::HolyShitServer.Src.Network.Packets.C2SGetRoomListRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGetRoomListRequest();
            if (payloadCase_ == PayloadOneofCase.GetRoomListRequest) {
              subBuilder.MergeFrom(GetRoomListRequest);
            }
            input.ReadMessage(subBuilder);
            GetRoomListRequest = subBuilder;
            break;
          }
          case 66: {
            global::HolyShitServer.Src.Network.Packets.S2CGetRoomListResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGetRoomListResponse();
            if (payloadCase_ == PayloadOneofCase.GetRoomListResponse) {
              subBuilder.MergeFrom(GetRoomListResponse);
            }
            input.ReadMessage(subBuilder);
            GetRoomListResponse = subBuilder;
            break;
          }
          case 74: {
            global::HolyShitServer.Src.Network.Packets.C2SJoinRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SJoinRoomRequest();
            if (payloadCase_ == PayloadOneofCase.JoinRoomRequest) {
              subBuilder.MergeFrom(JoinRoomRequest);
            }
            input.ReadMessage(subBuilder);
            JoinRoomRequest = subBuilder;
            break;
          }
          case 82: {
            global::HolyShitServer.Src.Network.Packets.S2CJoinRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CJoinRoomResponse();
            if (payloadCase_ == PayloadOneofCase.JoinRoomResponse) {
              subBuilder.MergeFrom(JoinRoomResponse);
            }
            input.ReadMessage(subBuilder);
            JoinRoomResponse = subBuilder;
            break;
          }
          case 90: {
            global::HolyShitServer.Src.Network.Packets.C2SJoinRandomRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SJoinRandomRoomRequest();
            if (payloadCase_ == PayloadOneofCase.JoinRandomRoomRequest) {
              subBuilder.MergeFrom(JoinRandomRoomRequest);
            }
            input.ReadMessage(subBuilder);
            JoinRandomRoomRequest = subBuilder;
            break;
          }
          case 98: {
            global::HolyShitServer.Src.Network.Packets.S2CJoinRandomRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CJoinRandomRoomResponse();
            if (payloadCase_ == PayloadOneofCase.JoinRandomRoomResponse) {
              subBuilder.MergeFrom(JoinRandomRoomResponse);
            }
            input.ReadMessage(subBuilder);
            JoinRandomRoomResponse = subBuilder;
            break;
          }
          case 106: {
            global::HolyShitServer.Src.Network.Packets.S2CJoinRoomNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CJoinRoomNotification();
            if (payloadCase_ == PayloadOneofCase.JoinRoomNotification) {
              subBuilder.MergeFrom(JoinRoomNotification);
            }
            input.ReadMessage(subBuilder);
            JoinRoomNotification = subBuilder;
            break;
          }
          case 114: {
            global::HolyShitServer.Src.Network.Packets.C2SLeaveRoomRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SLeaveRoomRequest();
            if (payloadCase_ == PayloadOneofCase.LeaveRoomRequest) {
              subBuilder.MergeFrom(LeaveRoomRequest);
            }
            input.ReadMessage(subBuilder);
            LeaveRoomRequest = subBuilder;
            break;
          }
          case 122: {
            global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomResponse();
            if (payloadCase_ == PayloadOneofCase.LeaveRoomResponse) {
              subBuilder.MergeFrom(LeaveRoomResponse);
            }
            input.ReadMessage(subBuilder);
            LeaveRoomResponse = subBuilder;
            break;
          }
          case 130: {
            global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CLeaveRoomNotification();
            if (payloadCase_ == PayloadOneofCase.LeaveRoomNotification) {
              subBuilder.MergeFrom(LeaveRoomNotification);
            }
            input.ReadMessage(subBuilder);
            LeaveRoomNotification = subBuilder;
            break;
          }
          case 138: {
            global::HolyShitServer.Src.Network.Packets.C2SRoomReadyRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SRoomReadyRequest();
            if (payloadCase_ == PayloadOneofCase.RoomReadyRequest) {
              subBuilder.MergeFrom(RoomReadyRequest);
            }
            input.ReadMessage(subBuilder);
            RoomReadyRequest = subBuilder;
            break;
          }
          case 146: {
            global::HolyShitServer.Src.Network.Packets.S2CRoomReadyResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CRoomReadyResponse();
            if (payloadCase_ == PayloadOneofCase.RoomReadyResponse) {
              subBuilder.MergeFrom(RoomReadyResponse);
            }
            input.ReadMessage(subBuilder);
            RoomReadyResponse = subBuilder;
            break;
          }
          case 154: {
            global::HolyShitServer.Src.Network.Packets.S2CRoomReadyNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CRoomReadyNotification();
            if (payloadCase_ == PayloadOneofCase.RoomReadyNotification) {
              subBuilder.MergeFrom(RoomReadyNotification);
            }
            input.ReadMessage(subBuilder);
            RoomReadyNotification = subBuilder;
            break;
          }
          case 162: {
            global::HolyShitServer.Src.Network.Packets.C2SGetRoomReadyStateRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGetRoomReadyStateRequest();
            if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateRequest) {
              subBuilder.MergeFrom(GetRoomReadyStateRequest);
            }
            input.ReadMessage(subBuilder);
            GetRoomReadyStateRequest = subBuilder;
            break;
          }
          case 170: {
            global::HolyShitServer.Src.Network.Packets.S2CGetRoomReadyStateResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGetRoomReadyStateResponse();
            if (payloadCase_ == PayloadOneofCase.GetRoomReadyStateResponse) {
              subBuilder.MergeFrom(GetRoomReadyStateResponse);
            }
            input.ReadMessage(subBuilder);
            GetRoomReadyStateResponse = subBuilder;
            break;
          }
          case 178: {
            global::HolyShitServer.Src.Network.Packets.C2SGamePrepareRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGamePrepareRequest();
            if (payloadCase_ == PayloadOneofCase.GamePrepareRequest) {
              subBuilder.MergeFrom(GamePrepareRequest);
            }
            input.ReadMessage(subBuilder);
            GamePrepareRequest = subBuilder;
            break;
          }
          case 186: {
            global::HolyShitServer.Src.Network.Packets.S2CGamePrepareResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGamePrepareResponse();
            if (payloadCase_ == PayloadOneofCase.GamePrepareResponse) {
              subBuilder.MergeFrom(GamePrepareResponse);
            }
            input.ReadMessage(subBuilder);
            GamePrepareResponse = subBuilder;
            break;
          }
          case 194: {
            global::HolyShitServer.Src.Network.Packets.S2CGamePrepareNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGamePrepareNotification();
            if (payloadCase_ == PayloadOneofCase.GamePrepareNotification) {
              subBuilder.MergeFrom(GamePrepareNotification);
            }
            input.ReadMessage(subBuilder);
            GamePrepareNotification = subBuilder;
            break;
          }
          case 202: {
            global::HolyShitServer.Src.Network.Packets.C2SGameStartRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SGameStartRequest();
            if (payloadCase_ == PayloadOneofCase.GameStartRequest) {
              subBuilder.MergeFrom(GameStartRequest);
            }
            input.ReadMessage(subBuilder);
            GameStartRequest = subBuilder;
            break;
          }
          case 210: {
            global::HolyShitServer.Src.Network.Packets.S2CGameStartResponse subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGameStartResponse();
            if (payloadCase_ == PayloadOneofCase.GameStartResponse) {
              subBuilder.MergeFrom(GameStartResponse);
            }
            input.ReadMessage(subBuilder);
            GameStartResponse = subBuilder;
            break;
          }
          case 218: {
            global::HolyShitServer.Src.Network.Packets.S2CGameStartNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CGameStartNotification();
            if (payloadCase_ == PayloadOneofCase.GameStartNotification) {
              subBuilder.MergeFrom(GameStartNotification);
            }
            input.ReadMessage(subBuilder);
            GameStartNotification = subBuilder;
            break;
          }
          case 226: {
            global::HolyShitServer.Src.Network.Packets.C2SPositionUpdateRequest subBuilder = new global::HolyShitServer.Src.Network.Packets.C2SPositionUpdateRequest();
            if (payloadCase_ == PayloadOneofCase.PositionUpdateRequest) {
              subBuilder.MergeFrom(PositionUpdateRequest);
            }
            input.ReadMessage(subBuilder);
            PositionUpdateRequest = subBuilder;
            break;
          }
          case 234: {
            global::HolyShitServer.Src.Network.Packets.S2CPositionUpdateNotification subBuilder = new global::HolyShitServer.Src.Network.Packets.S2CPositionUpdateNotification();
            if (payloadCase_ == PayloadOneofCase.PositionUpdateNotification) {
              subBuilder.MergeFrom(PositionUpdateNotification);
            }
            input.ReadMessage(subBuilder);
            PositionUpdateNotification = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
